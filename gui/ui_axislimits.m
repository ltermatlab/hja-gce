function ui_axislimits(op)
%Axis limits dialog box for 2D and 3D plots
%
%syntax: ui_axislimits
%
%
%(c)2002-2011 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 07-Sep-2011

if nargin == 0

   %clear prior instances of dialog
   h_dlg = findobj('Tag','dlgAxisLimits');
   if ~isempty(h_dlg)
      close(h_dlg)
   end

   h = gcf;
   h_ax = gca;

   if length(axis) == 6
      plottype = '3d';
      zvis = 'on';
   else
      plottype = '2d';
      zvis = 'off';
   end

   %get x axis settings
   xlblstr = get(get(h_ax,'XLabel'),'String');
   if isempty(xlblstr)
      xlblstr = 'X Axis';
   elseif length(xlblstr) > 25
      xlblstr = [xlblstr(1:22),'...'];
   end

   xlims = get(h_ax,'XLim');
   xtick = get(h_ax,'XTick');
   xscale = get(h_ax,'XScale');

   if length(xtick) < 2
      xtick = xlims;
   end

   if strcmp(get(h_ax,'XDir'),'normal')
      xdir = 0;
   else
      xdir = 1;
   end

   %get y axis settings
   ylblstr = get(get(h_ax,'YLabel'),'String');
   if isempty(ylblstr)
      ylblstr = 'Y Axis';
   elseif length(ylblstr) > 25
      ylblstr = [ylblstr(1:22),'...'];
   end

   ylims = get(h_ax,'YLim');
   ytick = get(h_ax,'YTick');
   yscale = get(h_ax,'YScale');

   if length(ytick) < 2
      ytick = ylims;
   end

   if strcmp(get(h_ax,'YDir'),'normal')
      ydir = 0;
   else
      ydir = 1;
   end

   %get z axis settings if 3d plot
   if strcmp(plottype,'3d')

      zlblstr = get(get(h_ax,'ZLabel'),'String');
      if isempty(zlblstr)
         zlblstr = 'Z Axis';
      elseif length(zlblstr) > 25
         zlblstr = [zlblstr(1:22),'...'];
      end

      zlims = get(h_ax,'ZLim');
      ztick = get(h_ax,'ZTick');

	   if length(ztick) < 2
   	   ztick = zlims;
	   end

      if strcmp(get(h_ax,'ZDir'),'normal')
      	zdir = 0;
	   else
   	   zdir = 1;
      end

      htval = 30;

   else  %2d

      zlblstr = '';
      zlims = [0 0];
      ztick = [0 0];
      zdir = 0;
      htval = 0;

   end

   h_axlims = findobj(h,'Tag','axlims');

   axlims = [xlims xtick(1) xtick(2)-xtick(1) ...
      ylims ytick(1) ytick(2)-ytick(1) ...
      zlims ztick(1) ztick(2)-ztick(1)];

   if ~isempty(h_axlims)
      origaxlims = get(h_axlims,'UserData');
   else
      origaxlims = axlims;
   end

   bgcolor = [.95 .95 .95];

   res = get(0,'ScreenSize');

   h_dlg = figure( ...
      'Visible','off', ...
      'Color',bgcolor, ...
      'Name','Axis Properties', ...
      'Units','pixels', ...
      'Position',[max(10,(res(3)-550).*0.5) max(20,(res(4)-(110+htval)).*0.5) 550 110+htval], ...
      'DefaultUiControlUnits','pixels', ...
      'KeypressFcn','figure(gcf)', ...
      'MenuBar','none', ...
      'Resize','off', ...
      'NumberTitle','off', ...
      'Tag','dlgAxisLimits', ...
      'UserData',[{h},{plottype}]);

   if mlversion >= 7
      set(h_dlg,'WindowStyle','normal')
      set(h_dlg,'DockControls','off')
   end

   h_text = uicontrol(h_dlg, ...
      'Style','text', ...
      'FontWeight','bold', ...
      'Position',[170 90+htval 75 18], ...
      'String','Min', ...
      'HorizontalAlignment','center', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor);

   uicontrol(h_dlg, ...
      'Style','text', ...
      'Position',[250 90+htval 75 18], ...
      'FontWeight','bold', ...
      'String','Max', ...
      'HorizontalAlignment','center', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor);

   uicontrol(h_dlg, ...
      'Style','text', ...
      'FontWeight','bold', ...
      'Position',[330 90+htval 75 18], ...
      'String','Start', ...
      'HorizontalAlignment','center', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor);

   uicontrol(h_dlg, ...
      'Style','text', ...
      'FontWeight','bold', ...
      'Position',[410 90+htval 65 18], ...
      'String','Interval', ...
      'HorizontalAlignment','center', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor);

   uicontrol(h_dlg, ...
      'Style','text', ...
      'Position',[480 90+htval 50 18], ...
      'FontWeight','bold', ...
      'String','Reverse', ...
      'HorizontalAlignment','center', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor);

   uicontrol(h_dlg, ...
      'Style','text', ...
      'Position',[10 70+htval 160 18], ...
      'FontWeight','bold', ...
      'String',xlblstr, ...
      'HorizontalAlignment','center', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor);

   uicontrol(h_dlg, ...
      'Style','text', ...
      'Position',[10 40+htval 160 18], ...
      'FontWeight','bold', ...
      'String',ylblstr, ...
      'HorizontalAlignment','center', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor);

   uicontrol(h_dlg, ...
      'Style','text', ...
      'Visible',zvis, ...
      'Position',[10 10+htval 160 18], ...
      'FontWeight','bold', ...
      'String',zlblstr, ...
      'HorizontalAlignment','center', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor);

   if strcmp(xscale,'log')
      xvis = 'off';
      xclr = [.9 .9 .9];
      str_xstart = '';
      str_xint = '';
   else
      xvis = 'on';
      xclr = [1 1 1];
      str_xstart = num2str(axlims(3));
      str_xint = num2str(axlims(4));
   end

   if strcmp(yscale,'log')
      yclr = [.9 .9 .9];
      yvis = 'off';
      str_ystart = '';
      str_yint = '';
   else
      yclr = [1 1 1];
      yvis = 'on';
      str_ystart = num2str(axlims(7));
      str_yint = num2str(axlims(8));
   end

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[170 70+htval 75 20], ...
      'String',num2str(axlims(1)), ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',[1 1 1], ...
      'Tag','ex_min');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[250 70+htval 75 20], ...
      'String',num2str(axlims(2)), ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',[1 1 1], ...
      'Tag','ex_max');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[330 70+htval 75 20], ...
      'String',str_xstart, ...
      'Enable',xvis, ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',xclr, ...
      'Tag','ex_start');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[410 70+htval 65 20], ...
      'String',str_xint, ...
      'Enable',xvis, ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',xclr, ...
      'Tag','ex_int');

   uicontrol(h_dlg, ...
      'Style','checkbox', ...
      'Position',[500 70+htval 15 20], ...
      'Value',xdir, ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor, ...
      'Tag','ex_dir');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[170 40+htval 75 20], ...
      'String',num2str(axlims(5)), ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',[1 1 1], ...
      'Tag','em_min');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[250 40+htval 75 20], ...
      'String',num2str(axlims(6)), ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',[1 1 1], ...
      'Tag','em_max');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[330 40+htval 75 20], ...
      'String',str_ystart, ...
      'Enable',yvis, ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',yclr, ...
      'Tag','em_start');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[410 40+htval 65 20], ...
      'String',str_yint, ...
      'Enable',yvis, ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',yclr, ...
      'Tag','em_int');

   uicontrol(h_dlg, ...
      'Style','checkbox', ...
      'Position',[500 40+htval 15 20], ...
      'Value',ydir, ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor, ...
      'Tag','em_dir');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Visible',zvis, ...
      'Position',[170 10+htval 75 20], ...
      'String',num2str(axlims(9)), ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',[1 1 1], ...
      'Tag','fl_min');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Visible',zvis, ...
      'Position',[250 10+htval 75 20], ...
      'String',num2str(axlims(10)), ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',[1 1 1], ...
      'Tag','fl_max');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Visible',zvis, ...
      'Position',[330 10+htval 75 20], ...
      'String',num2str(axlims(11)), ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',[1 1 1], ...
      'Tag','fl_start');

   uicontrol(h_dlg, ...
      'Style','edit', ...
      'Visible',zvis, ...
      'Position',[410 10+htval 65 20], ...
      'String',num2str(axlims(12)), ...
      'HorizontalAlignment','left', ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',[1 1 1], ...
      'Tag','fl_int');

   uicontrol(h_dlg, ...
      'Style','checkbox', ...
      'Visible',zvis, ...
      'Position',[500 10+htval 15 20], ...
      'Value',zdir, ...
      'ForegroundColor',[0 0 0], ...
      'BackgroundColor',bgcolor, ...
      'Tag','fl_dir');

   uicontrol(h_dlg, ...
      'Style','pushbutton', ...
      'Position',[10 5 60 25], ...
      'String','Cancel', ...
      'Tag','cmdCancel', ...
      'UserData',[xdir ydir zdir], ...
      'Callback','ui_axislimits(''cancel'')');

   uicontrol(h_dlg, ...
      'Style','pushbutton', ...
      'Position',[245 5 60 25], ...
      'String','Reset', ...
      'Tag','cmdDefault', ...
      'UserData',origaxlims, ...
      'Callback','ui_axislimits(''default'')');

   uicontrol(h_dlg, ...
      'Style','pushbutton', ...
      'Position',[480 5 60 25], ...
      'String','Apply', ...
      'Tag','cmdApply', ...
      'UserData',axlims, ...
      'Callback','ui_axislimits(''eval'')');

   set(h_dlg,'Visible','on'); drawnow

else

   h_dlg = findobj('Tag','dlgAxisLimits');

   data = get(h_dlg,'UserData');
   h_fig = data{1};
   plottype = data{2};

   tags = [{'ex_min'} {'ex_max'} {'ex_start'} {'ex_int'} ...
         {'em_min'} {'em_max'} {'em_start'} {'em_int'} ...
         {'fl_min'} {'fl_max'} {'fl_start'} {'fl_int'}];

   boxes = [{'ex_dir'} {'em_dir'} {'fl_dir'}];

   if strcmp(op,'cancel')

      close(h_dlg)

      figure(h_fig)

   elseif strcmp(op,'default')

      h_default = findobj(h_dlg,'Tag','cmdDefault');
      h_cancel = findobj(h_dlg,'Tag','cmdCancel');

      axlims = get(h_default,'UserData');
      axisdir = get(h_cancel,'UserData');

      for n = 1:length(tags)
         h_edit = findobj(h_dlg,'Tag',char(tags{n}));
         if ~strcmp(get(h_edit,'Enable'),'off')
            set(h_edit,'String',num2str(axlims(n)))
         end
      end

      for n = 1:length(boxes)
         h_box = findobj(h_dlg,'Tag',char(boxes{n}));
         set(h_box,'Value',axisdir(n))
      end

   elseif strcmp(op,'eval')  %apply settings

      h_apply = findobj(h_dlg,'Tag','cmdApply');
      h_cancel = findobj(h_dlg,'Tag','cmdCancel');

      initaxlims = get(h_apply,'UserData');
      axlims = initaxlims;

      initaxdir = get(h_cancel,'UserData');
      axdir = initaxdir;

      for n = 1:length(tags)
         h_edit = findobj(h_dlg,'Tag',char(tags{n}));
         str = deblank(get(h_edit,'String'));
         if length(strfind(str,'/')) == 2 || length(strfind(str,'-')) == 2  %check for date strings
            val = datenum(str);
         else
            val = str2num(str);  %convert to numeric, evaluating expressions if necessary
         end
         if ~isempty(val)
            axlims(n) = val;
         end
      end

      for n = 1:length(boxes)
         h_box = findobj(h_dlg,'Tag',char(boxes{n}));
         axdir(n) = get(h_box,'Value');
      end

      close(h_dlg)
      drawnow
      figure(h_fig)

      %update plot if values changed

      if strcmp(plottype,'3d')  %3d plot

         if sum(axdir ~= initaxdir) > 0

            axdirstr = [{'normal'} {'reverse'}];

            set(gca, ...
               'XDir',char(axdirstr{axdir(1)+1}), ...
               'YDir',char(axdirstr{axdir(2)+1}), ...
               'ZDir',char(axdirstr{axdir(3)+1}))

         end

         if sum(axlims ~= initaxlims) > 0

            %update axis
            axis([axlims(1:2) axlims(5:6) axlims(9:10)])

            %apply custom ticks
            set(gca, ...
               'XTick',[axlims(3):axlims(4):axlims(2)], ...
               'YTick',[axlims(7):axlims(8):axlims(6)], ...
               'ZTick',[axlims(11):axlims(12):axlims(10)])

         end

      else  %2d plot

         axis auto
         axis([axlims(1:2) axlims(5:6)])

         if sum(axdir ~= initaxdir) > 0

            axdirstr = [{'normal'} {'reverse'}];

            set(gca, ...
               'XDir',char(axdirstr{axdir(1)+1}), ...
               'YDir',char(axdirstr{axdir(2)+1}))

         end

         if ~strcmp(get(gca,'XScale'),'log')
            set(gca,'XTick',[axlims(3):axlims(4):axlims(2)])
         end

         if ~strcmp(get(gca,'YScale'),'log')
            set(gca,'YTick',[axlims(7):axlims(8):axlims(6)])
         end

      end

      dateaxis
	   drawnow

   end

end


function num = mlversion
%Returns the version of MATLAB running in numerical form ([majorversion].[minorversion])
%
%syntax: vnum = mlversion
%
%inputs:
%  none
%
%outputs:
%  vnum = version number (e.g. 6.5)
%
%Wade Sheldon
%Dept. of Marine Sciences
%University of Georgai
%Athens, GA 30602
%
%last modified: 25-Jul-2008

v = version;

[v_maj_str,rem] = strtok(v,'.');

v_min_str = strtok(rem,'.');

num = str2num(v_maj_str) + str2num(v_min_str)./10;