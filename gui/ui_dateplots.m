function ui_dateplots(op)
%GUI dialog for generating multiple date plots at various intervals from a time-series plot
%to generate bitmpap or vector image files
%
%syntax:  ui_dateplots
%
%(c)2002-2009 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 23-Jan-2009

if nargin == 0
   op = 'init';
end

if strcmp(op,'init') == 1

   if length(findobj) > 1
      h_fig = gcf;
      h_dlg = findobj('Tag','dlgDatePlots');
      h_ed = findobj('tag','dlgDSEditor');
      if ~isempty(h_ed)
         pn = get(findobj(h_ed(end),'tag','mnuSave'),'UserData');
      else
         pn = pwd;
      end
   else
      f_fig = [];
      h_dlg = [];
      pn = pwd;
   end

   if ~isempty(h_dlg)
      delete(h_dlg)
   end

   if ~isempty(h_fig)

      bgcolor = [0.9 0.9 0.9];
      res = get(0,'screensize');
      figunits = get(h_fig,'Units');
      set(h_fig,'Units','pixels')
      figpos = get(h_fig,'Position');
      set(h_fig,'Units',figunits)
      figwidth = ceil(figpos(3));

      fmtlist = {'PNG - high resolution bitmap'; ...
            'JPEG - high resolution bitmap'; ...
            'JPEG - medium resolution bitmap'; ...
            'JPEG - low resolution bitmap'; ...
            'TIFF - high resolution bitmap'; ...
            'TIFF (compressed) - high resolution bitmap'; ...
            'EPS (level 2) - high resolution vector'; ...
            'EPS (level 1) - high resolution vector'; ...
            'PS (level 2) - high resolution vector'; ...
            'PS (level 1) - high resolution vector'; ...
            'Adobe Illustrator - high resolution vector'};

      fmtref = {'png','.png'; ...
            'jpeg99','.jpg'; ...
            'jpeg85','.jpg'; ...
            'jpeg70','.jpg'; ...
            'tiff','.tif'; ...
            'tiffnocompression','.tif'; ...
            'epsc2','.eps'; ...
            'epsc','.eps'; ...
            'psc2','.ps'; ...
            'psc','.ps'; ...
            'ill','.ai'};

      intervals = {'day';'week';'month';'year';'decade'};

      h_dlg = figure('Visible','off', ...
         'Color',[0.95 0.95 0.95], ...
         'KeyPressFcn','figure(gcf)', ...
         'Resize','off', ...
         'MenuBar','none', ...
         'Name','Export Date Plots', ...
         'NumberTitle','off', ...
         'Position',[max(10,(res(3)-700).*0.5) max(30,(res(4)-220).*0.5) 700 220], ...
         'Tag','dlgDatePlots', ...
         'ToolBar','none', ...
         'DefaultuicontrolUnits','pixels');

      if mlversion >= 7
         set(h_dlg,'WindowStyle','normal')
         set(h_dlg,'DockControls','off')
      end

      h1 = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',bgcolor, ...
         'Position',[5 45 690 170], ...
         'Style','frame', ...
         'Tag','Frame1');

      h1 = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',bgcolor, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'Position',[24 175 170 20], ...
         'String','Path for Writing Files', ...
         'Style','text', ...
         'Tag','StaticText1');

      h1 = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',bgcolor, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'Position',[24 139 170 20], ...
         'String','Name Prefix for Files', ...
         'Style','text', ...
         'Tag','StaticText1');

      h1 = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',bgcolor, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'Position',[25 101 114 20], ...
         'String','Date Interval', ...
         'Style','text', ...
         'Tag','StaticText1');

      h1 = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',bgcolor, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'Position',[25 66 114 20], ...
         'String','Image Format', ...
         'Style','text', ...
         'Tag','StaticText1');

      h1 = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',bgcolor, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'Position',[430 65 169 20], ...
         'String','Image Width (pixels)', ...
         'Style','text', ...
         'Tag','StaticText1');

      h_editPath = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',10, ...
         'HorizontalAlignment','left', ...
         'Position',[194 175 423 23], ...
         'Style','edit', ...
         'String',pn, ...
         'Tag','editPath', ...
         'Callback','ui_dateplots(''path'')', ...
         'UserData',pn);

      h_editName = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',10, ...
         'HorizontalAlignment','left', ...
         'Position',[195 139 245 23], ...
         'Style','edit', ...
         'Callback','ui_dateplots(''buttons'')', ...
         'Tag','editName');

      h_popInterval = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',10, ...
         'Position',[141 102 271 22], ...
         'String',{'Daily (1 day per plot)';'Weekly (1 week per plot)';'Monthly (1 month per plot)';'Annual (1 year per plot)';'Decadal (10 years per plot)'}, ...
         'Style','popupmenu', ...
         'Tag','popInterval', ...
         'Value',3);

      h_popFormat = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',10, ...
         'Position',[141 67 260 22], ...
         'String',fmtlist, ...
         'Style','popupmenu', ...
         'Tag','popFormat', ...
         'Value',1);

      h_editWidth = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',10, ...
         'HorizontalAlignment','left', ...
         'Position',[600 64 60 23], ...
         'String',int2str(figwidth), ...
         'Style','edit', ...
         'UserData',figwidth, ...
         'Callback','ui_dateplots(''width'')', ...
         'Tag','editWidth');

      h_cmdCancel = uicontrol('Parent',h_dlg, ...
         'Callback','ui_dateplots(''cancel'')', ...
         'FontSize',10, ...
         'Position',[10 10 75 25], ...
         'String','Cancel', ...
         'Tag','cmdCancel');

      h_cmdProceed = uicontrol('Parent',h_dlg, ...
         'Callback','ui_dateplots(''eval'')', ...
         'FontSize',10, ...
         'Position',[615 10 75 25], ...
         'String','Proceed', ...
         'Enable','off', ...
         'Tag','cmdProceed');

      h_cmdBrowse = uicontrol('Parent',h_dlg, ...
         'Callback','ui_dateplots(''browse'')', ...
         'FontSize',10, ...
         'Position',[619 175 65 25], ...
         'String','Browse', ...
         'Tag','cmdBrowse');

      uih = struct('editName',h_editName, ...
         'editPath',h_editPath, ...
         'popInterval',h_popInterval, ...
         'popFormat',h_popFormat, ...
         'editWidth',h_editWidth, ...
         'cmdBrowse',h_cmdBrowse, ...
         'cmdCancel',h_cmdCancel, ...
         'cmdProceed',h_cmdProceed, ...
         'h_fig',h_fig, ...
         'figwidth',figwidth, ...
         'intervals',{intervals}, ...
         'fmtref',{fmtref});

      set(h_dlg,'UserData',uih,'Visible','on')
      drawnow

   end

else

   h_dlg = findobj('Tag','dlgDatePlots');

   if ~isempty(h_dlg)

      uih = get(h_dlg(1),'UserData');

      switch op

         case 'cancel'

            close(h_dlg)
            drawnow
            ui_aboutgce('reopen')  %check for last window

         case 'eval'

            if ~isempty(h_dlg)

               uih = get(h_dlg(1),'UserData');

               name = deblank(get(uih.editName,'String'));
               pn = deblank(get(uih.editPath,'String'));
               interval = uih.intervals{get(uih.popInterval,'Value')};
               fmt = uih.fmtref{get(uih.popFormat,'Value'),1};
               wid = str2double(deblank(get(uih.editWidth,'String')));

               if ~isempty(name) && exist(pn,'dir') == 7

                  close(h_dlg)
                  drawnow
                  figure(uih.h_fig)

                  res = round(wid./uih.figwidth .* 96);  %calculate resolution based on width ratio assuming 96dpi screen
                  msg = dateplots(interval,name,pn,fmt,res,0,uih.h_fig);

                  if ~isempty(msg)
                     messagebox('init',msg,'','Warning',[.9 .9 .9]);
                  elseif exist('syncpath','file') == 2 || exist('syncpath','file') == 6
                     syncpath(pn,'save')  %update path cache
                  end

               else

                  messagebox('init','Invalid base name for images files or invalid path','','Error',[.9 .9 .9]);

               end

            end

         case 'browse'

            pn = get(uih.editPath,'String');

            if exist('uigetdir','builtin') == 5 || exist('uigetdir','file') == 2
               pn = uigetdir(pn,'Select a directory to save the plot image files');
            else
               fn = [deblank(get(uih.editName,'String')),'_mmmyy',uih.fmtref{get(uih.popFormat,'Value'),2}];
               curpath = pwd;
               cd(pn)
               [pn,fn] = uiputfile(fn,'Select a directory to save the plot image files');
               cd(curpath)
            end

            if pn ~= 0
               if exist(pn,'dir') == 7
                  set(uih.editPath,'String',pn,'UserData',pn)
               end
            end

         case 'path'

            pn = deblank(get(uih.editPath,'String'));

            if exist(pn,'dir') == 7
               set(uih.editPath,'String',pn,'UserData',pn)
            else
               set(uih.editPath,'String',get(uih.editPath,'UserData'))
               drawnow
               messagebox('init','Invalid path -- selection reset to prior value','','Error',[.9 .9 .9])
            end

         case 'width'

            wid = str2double(deblank(get(uih.editWidth,'String')));
            if isempty(wid)
               wid = 0;
            end
            if wid > 0
               set(uih.editWidth,'UserData',wid)
            else
               set(uih.editWidth,'String',num2str(get(uih.editWidth,'UserData')))
               drawnow
               messagebox('init','Invalid resolution -- value reset','','Error',[.9 .9 .9])
            end

         case 'buttons'

            name = deblank(get(uih.editName,'String'));
            pn = deblank(get(uih.editPath,'String'));
            wid = str2double(deblank(get(uih.editWidth,'String')));

            if ~isempty(name) && ~isempty(pn) && ~isempty(wid)
               set(uih.cmdProceed,'Enable','on')
            else
               set(uih.cmdProceed,'Enable','off')
            end

      end

   end

end