function ui_edit_filters(op,field)
%GUI dialog for editing custom import filter entries for the GCE Data Toolbox
%
%syntax: ui_edit_filters(op,field)
%
%input:
%  op = operation ('init' to initialize dialog)
%  field = field to update when op = 'update'
%
%(c)2013-2014 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 01-Dec-2014

%default to init
if exist('op','var') ~= 1
   op = 'init';
end

if strcmp(op,'init') %create the dialog
   
   %retrieve import filters from imp_filters.mat database
   filterdata = get_importfilters;
   
   if ~isempty(filterdata)
      
      %cache original data
      origdata = filterdata;
      
      %define number of arguments to support
      numargs = 10;

      %check for legacy imp_filters.mat format and add new argument fields
      newcols = concatcellcols([repmat({'Argument'},numargs,1),strrep(cellstr(num2str((1:numargs)')),' ','')],'')';
      
      %add missing fields
      emptycol = repmat({''},num_records(filterdata),1);         
      for n = 1:numargs
         Imatch = name2col(filterdata,newcols{n});
         if isempty(Imatch)
            filterdata = addcol(filterdata,emptycol,newcols{n},'none','Optional argument','s','text','none',0,'');
         end
      end

      %close prior instances of the dialog
      if length(findobj) > 1
         h_dlg = findobj('Tag','dlgEditFilters');
         if ~isempty(h_dlg)
            delete(h_dlg)
         end
      end
      
      %define GUI metrics
      bgcolor = [0.9 0.9 0.9];
      res = get(0,'ScreenSize');
      
      %check for open GUI figures, cache current figure handle
      if length(findobj) > 1
         h_fig = gcf;
      else
         h_fig = '';
      end
      
      %create new dialog instance
      h_dlg = figure('Visible','off', ...
         'Color',[0.95 0.95 0.95], ...
         'KeyPressFcn','figure(gcf)', ...
         'CloseRequestFcn','ui_edit_filters(''close'')', ...
         'MenuBar','none', ...
         'Name','Edit Import Filters', ...
         'NumberTitle','off', ...
         'PaperUnits','points', ...
         'Position',[max(1,0.5.*(res(3)-740)) max(50,0.5.*(res(4)-695)) 740 695], ...
         'Tag','dlgEditFilters', ...
         'ToolBar','none', ...
         'DefaultuicontrolUnits','pixels', ...
         'Resize','off');
      
      %disable figure docking
      if mlversion >= 7
         set(h_dlg,'WindowStyle','normal')
         set(h_dlg,'DockControls','off')
      end
      
      %define ui controls
      uicontrol('Parent',h_dlg, ...
         'Style','frame', ...
         'Units','pixels', ...
         'Position',[5 645 730 45], ...
         'BackgroundColor',bgcolor, ...
         'ForegroundColor',[0 0 0]);
      
      uicontrol('Parent',h_dlg, ...
         'Style','frame', ...
         'Units','pixels', ...
         'Position',[5 40 730 600], ...
         'BackgroundColor',bgcolor, ...
         'ForegroundColor',[0 0 0]);
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 659 110 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','Import Filter', ...
         'Tag','lblImportFilter');
      
      h_popFilter = uicontrol('Parent',h_dlg, ...
         'Style','popupmenu', ...
         'Position',[125 657 450 22], ...
         'BackgroundColor',[1 1 1], ...
         'ForegroundColor',[0 0 0], ...
         'String',{'<select an import filter>'}, ...
         'Fontsize',9, ...
         'Value',1, ...
         'Callback','ui_edit_filters(''filter'')', ...
         'Tag','popFilter');
      
      h_cmdNew = uicontrol('Parent',h_dlg, ...
         'Position',[582 656 45 25], ...
         'Callback','ui_edit_filters(''new'')', ...
         'String','New', ...
         'TooltipString','Add a new import filter entry to the list', ...
         'Tag','cmdNew');
      
      h_cmdCopy = uicontrol('Parent',h_dlg, ...
         'Position',[632 656 45 25], ...
         'Callback','ui_edit_filters(''copy'')', ...
         'String','Copy', ...
         'TooltipString','Copy the selected import filter to add a new entry to the list', ...
         'Enable','off', ...
         'Tag','cmdCopy');
      
      h_cmdDelete = uicontrol('Parent',h_dlg, ...
         'Position',[680 656 50 25], ...
         'Callback','ui_edit_filters(''delete'')', ...
         'String','Delete', ...
         'TooltipString','Delete the selected import filter', ...
         'Enable','off', ...
         'Tag','cmdCopyPath');
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 608 110 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','Menu Label');
      
      h_editLabel = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 608 225 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','editLabel', ...
         'Enable','off', ...
         'Callback','ui_edit_filters(''update'',''Label'')');
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[360 608 115 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','Menu Subheading');
      
      h_editSubheading = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[485 608 240 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','editSubheading', ...
         'Enable','off', ...
         'Callback','ui_edit_filters(''update'',''Subheading'')');
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 575 110 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','Function Name', ...
         'Tag','lblMFile');
      
      h_editMfile = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 575 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','editMfile', ...
         'Enable','off', ...
         'Callback','ui_edit_filters(''update'',''Mfile'')');
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 545 110 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','Syntax Help', ...
         'Tag','lblSyntaxHelp');
      
      h_cmdBrowseFile = uicontrol('Parent',h_dlg, ...
         'Position',[310 575 50 25], ...
         'Callback','ui_edit_filters(''browsefiles'')', ...
         'String','Browse', ...
         'TooltipString','Browse to select an M-file in the MATLAB search path', ...
         'Enable','off', ...
         'Tag','cmdBrowseFile');
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[375 577 350 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','MATLAB function to use for importing data files (without .m)', ...
         'Tag','lblMFileHelp');
      
      h_listSyntax =  uicontrol('Parent',h_dlg, ...
         'Style','listbox', ...
         'Position',[125 415 600 150], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Min',1, ...
         'Max',5, ...
         'Enable','off', ...
         'Tag','listSyntax');
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 385 110 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','File Mask', ...
         'Tag','lblFileMask');
      
      h_editFilemask = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 385 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editFileMask', ...
         'Callback','ui_edit_filters(''update'',''Filemask'')');
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 386 400 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','mask for selecting files, e.g. *.mat or *.txt;*.asc (use www for web-based)', ...
         'Tag','lblFileMaskHelp');
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 355 110 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','File Prompt', ...
         'Tag','lblFilePrompt');
      
      h_editFileprompt = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 355 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editFileprompt', ...
         'Callback','ui_edit_filters(''update'',''Fileprompt'')');
      
      uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 356 400 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','text to display when prompting users for data file selection', ...
         'Tag','lblFilePromptHelp');
      
      h_lblArg1 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 325 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg1');
      
      h_lblArg2 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 295 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg2');
      
      h_lblArg3 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 265 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg3');
      
      h_lblArg4 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 235 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg4');
      
      h_lblArg5 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 205 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg5');
      
      h_lblArg6 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 175 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg6');
      
      h_lblArg7 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 145 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg7');
      
      h_lblArg8 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 115 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg8');
      
      h_lblArg9 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 75 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg9');
      
      h_lblArg10 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[15 55 120 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArg10');
      
      h_lblArgHelp1 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 325 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp1');
      
      h_lblArgHelp2 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 295 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp2');
      
      h_lblArgHelp3 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 265 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp3');
      
      h_lblArgHelp4 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 235 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp4');
      
      h_lblArgHelp5 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 205 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp5');
      
      h_lblArgHelp6 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 175 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp6');
      
      h_lblArgHelp7 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 145 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp7');
      
      h_lblArgHelp8 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 115 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp8');
      
      h_lblArgHelp9 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 85 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp9');
      
      h_lblArgHelp10 = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'Position',[315 55 415 18], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',9, ...
         'FontWeight','normal', ...
         'ForegroundColor',[0 0 0.8], ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Tag','lblArgHelp10');
      
      h_editArgument1 =  uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 324 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument1', ...
         'Callback','ui_edit_filters(''update'',''Argument1'')');
      
      h_editArgument2 = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 294 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument2', ...
         'Callback','ui_edit_filters(''update'',''Argument2'')');
      
      h_editArgument3 = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 264 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument3', ...
         'Callback','ui_edit_filters(''update'',''Argument3'')');
      
      h_editArgument4 = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 234 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument4', ...
         'Callback','ui_edit_filters(''update'',''Argument4'')');
      
      h_editArgument5 = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 204 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument5', ...
         'Callback','ui_edit_filters(''update'',''Argument5'')');
      
      h_editArgument6 = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 174 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument6', ...
         'Callback','ui_edit_filters(''update'',''Argument6'')');
      
      h_editArgument7 = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 144 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument7', ...
         'Callback','ui_edit_filters(''update'',''Argument7'')');
      
      h_editArgument8 = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 114 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument8', ...
         'Callback','ui_edit_filters(''update'',''Argument8'')');
      
      h_editArgument9 = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 84 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument9', ...
         'Callback','ui_edit_filters(''update'',''Argument9'')');
      
      h_editArgument10 = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[125 54 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String','', ...
         'Enable','off', ...
         'Tag','editArgument10', ...
         'Callback','ui_edit_filters(''update'',''Argument10'')');
      
      h_cmdClose = uicontrol('Parent',h_dlg, ...
         'Position',[10 10 80 25], ...
         'String','Cancel', ...
         'Tag','cmdClose', ...
         'TooltipString','Close the dialog', ...
         'Callback','ui_edit_filters(''close'')', ...
         'UserData','[ ]');
      
      h_cmdSave = uicontrol('Parent',h_dlg, ...
         'Position',[650 10 80 25], ...
         'String','Save', ...
         'Tag','cmdSave', ...
         'TooltipString','Batch process files in the source directory with the specified settings', ...
         'Callback','ui_edit_filters(''save'')');
      
      %create cache struct with ui handles and settings
      uih = struct( ...
         'numargs',numargs, ...
         'h_fig',h_fig, ...
         'popFilter',h_popFilter, ...
         'editLabel',h_editLabel, ...
         'editSubheading',h_editSubheading, ...
         'cmdBrowseFile',h_cmdBrowseFile, ...
         'cmdNew',h_cmdNew, ...
         'cmdCopy',h_cmdCopy, ...
         'cmdDelete',h_cmdDelete, ...
         'editMfile',h_editMfile, ...
         'editFilemask',h_editFilemask, ...
         'editFileprompt',h_editFileprompt, ...
         'listSyntax',h_listSyntax, ...
         'lblArg1',h_lblArg1, ...
         'lblArg2',h_lblArg2, ...
         'lblArg3',h_lblArg3, ...
         'lblArg4',h_lblArg4, ...
         'lblArg5',h_lblArg5, ...
         'lblArg6',h_lblArg6, ...
         'lblArg7',h_lblArg7, ...
         'lblArg8',h_lblArg8, ...
         'lblArg9',h_lblArg9, ...
         'lblArg10',h_lblArg10, ...
         'lblArgHelp1',h_lblArgHelp1, ...
         'lblArgHelp2',h_lblArgHelp2, ...
         'lblArgHelp3',h_lblArgHelp3, ...
         'lblArgHelp4',h_lblArgHelp4, ...
         'lblArgHelp5',h_lblArgHelp5, ...
         'lblArgHelp6',h_lblArgHelp6, ...
         'lblArgHelp7',h_lblArgHelp7, ...
         'lblArgHelp8',h_lblArgHelp8, ...
         'lblArgHelp9',h_lblArgHelp9, ...
         'lblArgHelp10',h_lblArgHelp10, ...
         'editArgument1',h_editArgument1, ...
         'editArgument2',h_editArgument2, ...
         'editArgument3',h_editArgument3, ...
         'editArgument4',h_editArgument4, ...
         'editArgument5',h_editArgument5, ...
         'editArgument6',h_editArgument6, ...
         'editArgument7',h_editArgument7, ...
         'editArgument8',h_editArgument8, ...
         'editArgument9',h_editArgument9, ...
         'editArgument10',h_editArgument10, ...
         'cmdClose',h_cmdClose, ...
         'cmdSave',h_cmdSave);
      
      %add filterdata array separately to avoid redimensioning structure
      uih.filterdata = filterdata;
      uih.origdata = origdata;
      
      %cache userdata
      set(h_dlg,'Visible','on','UserData',uih)
      
      %update popup menu contents
      ui_edit_filters('menu')
      
   else
      messagebox('init','The import filter database file ''imp_filters.mat'' was not found or invalid','','Error')
   end
   
else
   
   %get dialog handle
   if length(findobj) > 1
      h_dlg = gcf;
   else
      h_dlg = [];
   end
   
   %validate dialog
   if ~isempty(h_dlg) && strcmp(get(h_dlg,'Tag'),'dlgEditFilters')
      
      %get cached form data
      uih = get(h_dlg,'UserData');
      numargs = uih.numargs;
      
      %handle callbacks
      switch op
         
         case 'close'  %close the form
            
            %delete figure to close without circular reference to closerequestfcn
            delete(h_dlg)
            drawnow
            
            %check for last window - open startup screen
            if ~isempty(uih.h_fig) && length(findobj)>1
               try
                  figure(uih.h_fig)
               catch
                  ui_aboutgce('reopen')  %check for last window
               end
            else
               ui_aboutgce('reopen')  %check for last window
            end
            
         case 'browsefiles'  %open a file selection dialog for selecting the mfile
            
            %cache current directory and get default path for import filters
            curpath = pwd;
            pn = [gce_homepath,filesep,'parsers'];
            if ~isdir(pn)
               pn = curpath;
            end
            
            %prompt for file
            cd(pn)
            [fn,pn] = uigetfile('*.m;*.p','Select a MATLAB m-file or p-file to use for importing data');
            cd(curpath)
            drawnow
            
            %check for cancel
            if ischar(fn)
               
               %parse mfile name
               [pn,mfile,fn_ext] = fileparts([pn,filesep,fn]);
               
               if inlist(lower(fn_ext),{'.m','.p'})
                  
                  %update form
                  set(uih.editMfile,'String',mfile)
                  ui_edit_filters('update','Mfile')
                  ui_edit_filters('filter')
                  
                  %check to see if mfile is in search path, otherwise issue warning
                  pathlist = splitstr(path,';');
                  Ipath = strcmpi(clean_path(pn),pathlist);
                  
                  %generate warning message with instructions
                  if sum(Ipath) == 0
                     msg = char(['Warning: the Mfile ''',mfile,'.m'' is not currently in the MATLAB search path'], ...
                        ['Copy it to ',gce_homepath,filesep,'parsers to avoid errors importing data']);
                     messagebox('init',msg,'','Warning',[0.95 0.95 0.95])
                  end
                  
               else
                  messagebox('init','Unsupported import filter - please choose a MATLAB Mfile (*.m) or Pfile (*.p)', ...
                     '','Error',[0.95 0.95 0.95])
               end
               
            end
            
         case 'new'  %add a new filter entry 
                        
            %get starting values for label, subheading
            label = 'New Filter';
            subheading = ['Added ',datestr(now,0)];
            mfile = '';
            
            %add new data row
            data = insertrows(uih.filterdata, ...
               {label,subheading,mfile},{'Label','Subheading','Mfile'});
            uih.filterdata = data;
            set(h_dlg,'UserData',uih)
            
            %update menu
            ui_edit_filters('menu')
            
            %refresh fields for new values
            set(uih.popFilter,'Value',num_records(data)+1)
            ui_edit_filters('filter')
            
         case 'copy'  %copy current filter entry
            
            %get row selection
            rownum = get(uih.popFilter,'Value') - 1;
            
            if rownum > 0
               
               %delete selected row and update cache
               numrows = num_records(uih.filterdata);
               data = copyrows(uih.filterdata,[1:numrows,rownum]);
               uih.filterdata = data;
               set(h_dlg,'UserData',uih)
               
               %set menu to first position and refresh
               ui_edit_filters('menu')
               set(uih.popFilter,'Value',numrows+2)
               ui_edit_filters('filter')
               
               %uupdate subheading
               subhead = get(uih.editSubheading,'String');
               set(uih.editSubheading,'String',[subhead,' (copy)'])
               ui_edit_filters('update','Subheading')
               
            end
            
         case 'delete'  %delete filter entry
            
            %get row selection
            rownum = get(uih.popFilter,'Value') - 1;
            
            if rownum > 0
               
               %delete selected row and update cache
               data = deleterows(uih.filterdata,rownum);
               uih.filterdata = data;
               set(h_dlg,'UserData',uih)
               
               %set menu to first position and refresh
               set(uih.popFilter,'Value',1)
               ui_edit_filters('menu')
               ui_edit_filters('filter')
               
            end
            
         case 'update'  %handle field updates
            
            if exist('field','var') == 1
               
               %get filter selection index, offsetting for dummy first row
               rownum = get(uih.popFilter,'Value') - 1;

               if rownum > 0
                  
                  %get updated value and prior value
                  fld = ['edit',field];
                  newval = trimstr(get(uih.(fld),'String'));
                  lastval = get(uih.(fld),'UserData');
                  
                  %check for changes
                  if ~strcmp(newval,lastval)
                     
                     %check for empty label, mfile, filemash
                     if inlist(field,{'Label','Mfile','Filemask'}) && isempty(newval)
                        
                        %restore prior value
                        set(uih.(fld),'String',lastval)
                        drawnow
                        
                        %issue warning
                        messagebox('init','An empty value is not allowed in this field - value reset', ...
                           '','Error',[0.95 0.95 0.95])
                        
                     else  %apply update
                        
                        %update last value cache (and update string to remove leading/trailing spaces
                        set(uih.(fld),'String',newval,'UserData',newval)
                        
                        data = uih.filterdata;  %get cached data
                        data = update_values(data,field,newval,rownum,0);  %update data structure value
                        
                        %update cached filter data
                        if ~isempty(data)
                           uih.filterdata = data;
                           set(h_dlg,'UserData',uih)
                        end
                        
                        %check for changes to label, subheading - regenerate menu
                        if strcmp(field,'Label') || strcmp(field,'Subheading')
                           ui_edit_filters('menu')
                        end
                        
                     end
                     
                  end
                  
               end
               
            end
            
         case 'menu'  %update popupmenu labels
            
            %get filter selection index, offsetting for dummy first row
            Isel = get(uih.popFilter,'Value');
            
            %extract filter information into cell arrays
            data = uih.filterdata;
            labels = extract(data,'Label');
            subheadings = extract(data,'Subheading');
            
            %generate filter list by concatenating label and subheading, adding a prompt as the first item to force selection
            subheadings = concatcellcols([repmat({' - '},length(labels),1),subheadings],'');
            filterlist = [{'<select an import filter>'} ; ...
               concatcellcols([labels,subheadings],'')];
            
            %update popupmenu
            set(uih.popFilter,'String',filterlist,'Value',Isel)
            drawnow            
            
         case 'filter'  %handle import filter changes
            
            %get filter selection index, offsetting for dummy first row
            rownum = get(uih.popFilter,'Value') - 1;
            
            %check for valid selection
            if rownum > 0
               
               %get filter info
               filterdata = copyrows(uih.filterdata,rownum);  %select filter entry
               
               if ~isempty(filterdata)
                  
                  %extract filter metadata, convert cell arrays to character arrays
                  label = char(extract(filterdata,'Label'));
                  subheading = char(extract(filterdata,'Subheading'));
                  mfile = char(extract(filterdata,'Mfile'));
                  filemask = char(extract(filterdata,'Filemask'));
                  fileprompt = char(extract(filterdata,'Fileprompt'));
                  
                  %update fields, caching original value in userdata field
                  set(uih.editLabel,'String',label,'UserData',label,'Enable','on')
                  set(uih.editSubheading,'String',subheading,'UserData',subheading,'Enable','on')
                  set(uih.editMfile,'String',mfile,'UserData',mfile,'Enable','on')
                  set(uih.editFilemask,'String',filemask,'UserData',filemask,'Enable','on')
                  set(uih.editFileprompt,'String',fileprompt,'UserData',fileprompt,'Enable','on')
                  
                  %enable buttons
                  set(uih.cmdCopy,'Enable','on')
                  set(uih.cmdDelete,'Enable','on')
                  set(uih.cmdBrowseFile,'Enable','on')
                  
                  %get function help
                  if ~isempty(mfile)
                     
                  [syntax,fn_desc,fnc_help,parms] = parse_gce_syntax(mfile);
                  
                  %add syntax help
                  if ~isempty(fnc_help)
                     set(uih.listSyntax,'String',splitstr(fnc_help,char(10),0,0),'Enable','on')
                  end
                  
                  %get argument name and description for help text (if argument undefined, clear and lock fields)
                  if isstruct(parms)
                     
                     %get index of input type arguments
                     Iinput = find(strcmp('input',{parms.type}'));
                     
                     %check for fn/pn or source/pn, offset
                     if length(Iinput) >= 2 && strcmp(parms(Iinput(2)).name,'pn')
                        offset = 2;
                     else
                        offset = 0;
                     end
                     
                     %calculate number of arguments supported by m-file
                     numargs = length(Iinput)-offset;
                     allargs = uih.numargs;
                     
                     %update fields
                     for i = 1:allargs
                        
                        %extract argument string
                        argstr = extract(filterdata,['Argument',int2str(i)]);
                        if ~isempty(argstr)
                           arg = char(argstr);
                        else
                           arg = '';
                        end
                        
                        %update argument fields and states
                        if i <= numargs
                           inputfld = i+offset;  %calculate input field, offsetting for filename, pathname arguments
                           argname = parms(Iinput(inputfld)).name;
                           argdesc = parms(Iinput(inputfld)).description;
                           helpstr = [argname,': ',argdesc];
                           set(uih.(['lblArg',int2str(i)]),'String',argname,'TooltipString',[argname,' argument value'])
                           set(uih.(['lblArgHelp',int2str(i)]),'String',argdesc,'TooltipString',helpstr)
                           set(uih.(['editArgument',int2str(i)]),'String',arg,'UserData',arg,'Enable','on')
                        else
                           set(uih.(['lblArg',int2str(i)]),'String','','TooltipString','')
                           set(uih.(['lblArgHelp',int2str(i)]),'String','','TooltipString','')
                           set(uih.(['editArgument',int2str(i)]),'String','','UserData','','Enable','off')
                        end
                        
                     end
                     
                  end
                  
                  else
 
                     %clear mfile-dependent fields
                     set(uih.editFilemask,'String','','Enable','off')
                     set(uih.editFileprompt,'String','','Enable','off')
                     set(uih.listSyntax,'String','','Enable','off')
                     
                     %clear arguments labels, editboxes and help strings
                     for i = 1:numargs
                        set(uih.(['lblArg',int2str(i)]),'String','','TooltipString','')
                        set(uih.(['lblArgHelp',int2str(i)]),'String','','TooltipString','')
                        set(uih.(['editArgument',int2str(i)]),'String','','UserData','','Enable','off')
                     end
                     
                  end
                  
               end
               
            else  %clear fields if no filter selected
               
               %clear and lock fixed fields
               set(uih.editLabel,'String','','UserData','','Enable','off')
               set(uih.editSubheading,'String','','UserData','','Enable','off')
               set(uih.editMfile,'String','','UserData','','Enable','off')
               set(uih.editFilemask,'String','','UserData','','Enable','off')
               set(uih.editFileprompt,'String','','UserData','','Enable','off')
               set(uih.listSyntax,'String','','Enable','off')
               
               %disable buttons
               set(uih.cmdCopy,'Enable','off')
               set(uih.cmdDelete,'Enable','off')
               set(uih.cmdBrowseFile,'Enable','off')
               
               %clear arguments labels, editboxes and help strings
               for i = 1:numargs
                  set(uih.(['lblArg',int2str(i)]),'String','','TooltipString','')
                  set(uih.(['lblArgHelp',int2str(i)]),'String','','TooltipString','')
                  set(uih.(['editArgument',int2str(i)]),'String','','UserData','','Enable','off')
               end
               
            end
            
            drawnow
            
         case 'save'  %save updated filter list
            
            %get fully qualified filename for imp_filters.mat
            fh = which('imp_filters.mat');
            if isempty(fh)
               pn = [gce_homepath,filesep,'userdata'];
               if ~isdir(pn)
                  mkdir(gce_homepath,'userdata');  %create userdata directory
               end
               fh = [pn,filesep,'imp_filters.mat'];
            end
            
            %save original filters as backup file
            data = uih.origdata; %#ok<NASGU>
            save([fh,'.bak'],'data')
            
            %sort updated filter data by Label, Subheading
            data = sortdata(uih.filterdata,{'Label','Subheading'},[1 1]);
            
            %save updated filter data
            save(fh,'data');
            
            %get handles of open editor instances for updating menus
            h_edit = findobj('tag','dlgDSEditor');
            
            if ~isempty(h_edit)
               
               %loop through all editor instances
               for cnt = 1:length(h_edit)
                  
                  %delete prior filters from menus
                  h_mnuImport = findobj(h_edit(cnt),'tag','mnuImport');
                  h_child = get(h_mnuImport,'Children');
                  if ~isempty(h_child)
                     for m = 1:length(h_child)
                        tag = get(h_child(m),'tag');
                        if ~strcmp(tag,'mnuImpAscii') && ~strcmp(tag,'mnuImpMatlab') && ~strncmp(tag,'mnuHarvest',10)
                           delete(h_child(m));
                        end
                     end
                  end
                  
                  %get new list of labels, subheadings
                  lbl = extract(data,'Label');
                  subheads = extract(data,'Subheading');
                  
                  if ~isempty(lbl)
                     
                     %sort groups alphabetically ignoring case
                     gps = unique(lbl);
                     [tmp,Isort] = sort(lower(gps));  %get sort index
                     gps = gps(Isort);
                     
                     %init loop variable for tracking top row
                     toprow = 0;
                     
                     %loop through groups generating menu items
                     for n = 1:length(gps)
                        
                        %determine separator setting
                        if toprow == 0
                           toprow = 1;
                           sep = 'on';
                        else
                           sep = 'off';
                        end
                        
                        Imatch = find(strcmp(lbl,gps{n}));  %get index of items of current group
                        
                        if length(Imatch) > 1
                           
                           %generate top menu
                           h = uimenu('Parent',h_mnuImport, ...
                              'Label',gps{n}, ...
                              'Separator',sep);
                           
                           %generate submenus
                           for m = 1:length(Imatch)
                              uimenu('Parent',h, ...
                                 'Label',subheads{Imatch(m)}, ...
                                 'Callback',['ui_editor(''imp_filter'',''',lbl{Imatch(m)},'_',subheads{Imatch(m)},''')']);
                           end
                           
                        elseif length(Imatch) == 1
                           
                           %generate single-tier menus
                           subhead = subheads{Imatch};
                           
                           if ~isempty(subhead)
                              h = uimenu('Parent',h_mnuImport, ...
                                 'Label',lbl{Imatch}, ...
                                 'Separator',sep);
                              uimenu('Parent',h, ...
                                 'Label',subhead, ...
                                 'Callback',['ui_editor(''imp_filter'',''',lbl{Imatch},'_',subhead,''')']);
                           else
                              uimenu('Parent',h_mnuImport, ...
                                 'Label',lbl{Imatch}, ...
                                 'Callback',['ui_editor(''imp_filter'',''',lbl{Imatch},''')'], ...
                                 'Separator',sep);
                           end
                           
                        end
                        
                     end
                     
                  end
                  
               end
               
            end
            
            %close dialog
            ui_edit_filters('close')
               
            
      end
      
   end
   
end