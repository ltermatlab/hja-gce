function ui_edit_geodatabase(op,dbfile,data)
%Open the geographic locations database 'geo_locations.mat' into a GUI grid for editing
%
%syntax: ui_edit_locations(op,dbfile,data)
%
%input:
%  op = operation to perform ('init' to open dialog)
%  dbfile = database file to edit (required):
%     'geo_locations' = edit point locations database (geo_locations.mat)
%     'geo_polygons' = edit site polygons database (geo_polygons.mat)
%  data = data returned from editor (not used when calling the function)
%
%output:
%  none
%
%(c)2013 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 12-Aug-2013

if nargin >= 2
   
   switch op
      
      case 'init'
         
         if strcmp(dbfile,'geo_locations') && exist('geo_locations.mat','file') == 2
            
            pn = fileparts(which('geo_locations.mat'));
            
            s = imp_struct('geo_locations.mat',pn,'','all');
            
            template = struct( ...
               'variable','', ...
               'name','', ...
               'units','', ...
               'description','', ...
               'datatype','', ...
               'variabletype','', ...
               'numbertype','', ...
               'precision',[], ...
               'criteria','', ...
               'codes','', ...
               'metadata','');
            
            template.variable = { ...
               'Location', ...
               'Name', ...
               'TypeCode', ...
               'TypeName', ...
               'SiteCode', ...
               'Site', ...
               'Description', ...
               'Access', ...
               'TransectDistance', ...
               'Longitude', ...
               'Latitude', ...
               'UTM_zone', ...
               'UTM_easting', ...
               'UTM_northing', ...
               'UTM_datum', ...
               'Elevation_m', ...
               'Elevation_datum', ...
               'Physiography', ...
               'Landform', ...
               'Hydrography', ...
               'Topography', ...
               'Geology', ...
               'Vegetation', ...
               'Fauna', ...
               'Active' ...
               };
            
            template.name = { ...
               'Location', ...
               'Name', ...
               'TypeCode', ...
               'TypeName', ...
               'SiteCode', ...
               'Site', ...
               'Description', ...
               'Access', ...
               'TransectDistance', ...
               'Longitude', ...
               'Latitude', ...
               'UTM_zone', ...
               'UTM_easting', ...
               'UTM_northing', ...
               'UTM_datum', ...
               'Elevation_m', ...
               'Elevation_datum', ...
               'Physiography', ...
               'Landform', ...
               'Hydrography', ...
               'Topography', ...
               'Geology', ...
               'Vegetation', ...
               'Fauna', ...
               'Active' ...
               };
            
            template.units = { ...
               '', ...
               '', ...
               '', ...
               '', ...
               '', ...
               '', ...
               '', ...
               '', ...
               'km', ...
               'degrees', ...
               'degrees', ...
               '', ...
               'm', ...
               'm', ...
               '', ...
               'm', ...
               '', ...
               '', ...
               '', ...
               '', ...
               '', ...
               '', ...
               '', ...
               '', ...
               '' ...
               };
            
            template.description = { ...
               'Location identifier (key)', ...
               'Location name (label)', ...
               'Location type code', ...
               'Location type name', ...
               'Containing site (polygon) code', ...
               'Containing site (polygon) name', ...
               'Location description', ...
               'Location accessibility information', ...
               'Distance upriver from the line of demarcation (estuarine sites)', ...
               'Geographic longitude', ...
               'Geographic latitude', ...
               'UTM zone', ...
               'UTM easting', ...
               'UTM northing', ...
               'UTM datum', ...
               'Location elevation', ...
               'Elevation datum', ...
               'Physiographic description of location', ...
               'Predominant landform of location', ...
               'Predominant hydrographic description of location', ...
               'Topographic description', ...
               'Geology of location', ...
               'Predominant vegetation at location', ...
               'Predominant fauna at location', ...
               'Location status (1 = active, 0 = inactive)' ...
               };
            
            template.datatype = { ...
               's', ...
               's', ...
               's', ...
               's', ...
               's', ...
               'd', ...
               's', ...
               's', ...
               'f', ...
               'f', ...
               'f', ...
               'd', ...
               'f', ...
               'f', ...
               's', ...
               'f', ...
               's', ...
               's', ...
               's', ...
               's', ...
               's', ...
               's', ...
               's', ...
               's', ...
               'd' ...
               };
            
            template.variabletype = { ...
               'nominal', ...
               'nominal', ...
               'nominal', ...
               'nominal', ...
               'nominal', ...
               'data', ...
               'nominal', ...
               'nominal', ...
               'data', ...
               'coord', ...
               'coord', ...
               'data', ...
               'coord', ...
               'data', ...
               'nominal', ...
               'data', ...
               'nominal', ...
               'nominal', ...
               'nominal', ...
               'nominal', ...
               'nominal', ...
               'nominal', ...
               'nominal', ...
               'nominal', ...
               'logical' ...
               };
            
            template.numbertype = { ...
               'none', ...
               'none', ...
               'none', ...
               'none', ...
               'none', ...
               'discrete', ...
               'none', ...
               'none', ...
               'continuous', ...
               'continuous', ...
               'continuous', ...
               'discrete', ...
               'continuous', ...
               'continuous', ...
               'none', ...
               'continuous', ...
               'none', ...
               'none', ...
               'none', ...
               'none', ...
               'none', ...
               'none', ...
               'none', ...
               'none', ...
               'discrete' ...
               };
            
            template.precision = [ ...
               0, ...
               0, ...
               0, ...
               0, ...
               0, ...
               0, ...
               0, ...
               0, ...
               4, ...
               6, ...
               6, ...
               0, ...
               1, ...
               1, ...
               0, ...
               4, ...
               0, ...
               0, ...
               0, ...
               0, ...
               0, ...
               0, ...
               0, ...
               0, ...
               0 ...
               ];
            
            template.criteria = repmat({''},1,length(template.precision));
            
            template.codes = repmat({''},1,length(template.precision));
            
            template.metadata = [];
            
            s = apply_template(s,template);
            
            ui_datagrid('init',s,'', ...
               'ui_edit_geodatabase(''eval'',''geo_locations'',s)', ...
               150,'left');
            
         elseif strcmp(dbfile,'geo_polygons') && exist('geo_polygons.mat','file') == 2
            
            try
               v = load('geo_polygons.mat','-mat');
            catch
               v = struct('null','');
            end
            
            if isfield(v,'polygons')
               
               %extract polygons
               polygons = v.polygons;
               
               %define fields to import (all except Polygon)
               flds = fieldnames(polygons);
               flds = flds(~strcmpi('Polygon',flds));
               
               %convert struct to data structure
               s = imp_struct(polygons,'','',flds);
               
               if ~isempty(s)
                  
                  poly = cell(length(polygons),1);
                  
                  for n = 1:length(polygons)
                     lonlat = [polygons(n).Polygon];
                     numrows = size(lonlat,1);
                     ar = repmat({''},numrows,1);
                     for vert = 1:numrows
                        ar{vert} = sprintf('%0.6f,%0.6f',lonlat(vert,1:2));
                     end
                     str = char(concatcellcols(ar',';'));
                     poly{n} = str;
                  end
                  
                  s = addcol(s,poly,'Polygon','','','s','coord','none',0);
                  
                  template = struct( ...
                     'variable','', ...
                     'name','', ...
                     'units','', ...
                     'description','', ...
                     'datatype','', ...
                     'variabletype','', ...
                     'numbertype','', ...
                     'precision',[], ...
                     'criteria','', ...
                     'codes','', ...
                     'metadata','');
                  
                  template.variable = { ...
                     'SiteCode', ...
                     'SiteNumber', ...
                     'SiteName', ...
                     'SiteLocation', ...
                     'SiteDesc', ...
                     'SiteAccess', ...
                     'Restrictions', ...
                     'Vegetation', ...
                     'Physiography', ...
                     'Landform', ...
                     'Hydrography', ...
                     'Topography', ...
                     'Geology', ...
                     'Fauna', ...
                     'Ownership', ...
                     'SiteType', ...
                     'CenterLon', ...
                     'CenterLat', ...
                     'WBoundLon', ...
                     'EBoundLon', ...
                     'SBoundLat', ...
                     'NBoundLat', ...
                     'Polygon' ...
                     };
                  
                  template.name = { ...
                     'SiteCode', ...
                     'SiteNumber', ...
                     'SiteName', ...
                     'SiteLocation', ...
                     'SiteDesc', ...
                     'SiteAccess', ...
                     'Restrictions', ...
                     'Vegetation', ...
                     'Physiography', ...
                     'Landform', ...
                     'Hydrography', ...
                     'Topography', ...
                     'Geology', ...
                     'Fauna', ...
                     'Ownership', ...
                     'SiteType', ...
                     'CenterLon', ...
                     'CenterLat', ...
                     'WBoundLon', ...
                     'EBoundLon', ...
                     'SBoundLat', ...
                     'NBoundLat', ...
                     'Polygon' ...
                     };
                  
                  template.units = { ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     '', ...
                     'degree', ...
                     'degree', ...
                     'degree', ...
                     'degree', ...
                     'degree', ...
                     'degree', ...
                     '' ...
                     };
                  
                  template.description = { ...
                     'Site identifier', ...
                     'Site number (alternate identifier)', ...
                     'Site name', ...
                     'Location', ...
                     'Description', ...
                     'Access information', ...
                     'Access restrictions', ...
                     'Dominant vegetation', ...
                     'Physiography description', ...
                     'Landform description', ...
                     'Hydrography description', ...
                     'Topography description', ...
                     'Geology description', ...
                     'Fauna description', ...
                     'Ownership information', ...
                     'Site type category', ...
                     'Geographic center longitude in degrees', ...
                     'Geographic center latitude in degrees', ...
                     'West bounding longitude', ...
                     'East bounding longitude', ...
                     'South bounding latitude', ...
                     'North bounding latitude', ...
                     'Polygon vertices (lon,lat pairs)' ...
                     };
                  
                  template.datatype = { ...
                     's', ...
                     'd', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     's', ...
                     'f', ...
                     'f', ...
                     'f', ...
                     'f', ...
                     'f', ...
                     'f', ...
                     's' ...
                     };
                  
                  template.variabletype = { ...
                     'nominal', ...
                     'ordinal', ...
                     'nominal', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'text', ...
                     'coord', ...
                     'coord', ...
                     'coord', ...
                     'coord', ...
                     'coord', ...
                     'coord', ...
                     'coord' ...
                     };
                  
                  template.numbertype = { ...
                     'none', ...
                     'discrete', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'none', ...
                     'continuous', ...
                     'continuous', ...
                     'continuous', ...
                     'continuous', ...
                     'continuous', ...
                     'continuous', ...
                     'none' ...
                     };
                  
                  template.precision = [ ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     0, ...
                     6, ...
                     6, ...
                     6, ...
                     6, ...
                     6, ...
                     6, ...
                     0 ...
                     ];
                  
                  template.criteria = repmat({''},1,length(template.precision));
                  
                  template.codes = repmat({''},1,length(template.precision));
                  
                  template.metadata = [];
                  
                  s = apply_template(s,template);
                  
                  ui_datagrid('init',s,'', ...
                     'ui_edit_geodatabase(''eval'',''geo_polygons'',s)', ...
                     150,'left');
                  
               end
               
            end
            
         end
         
      case 'eval'
         
         %check for return data
         if exist('data','var')
            
            %check for database type
            if strcmp(dbfile,'geo_locations')
               
               %get path for saving
               pn = fileparts(which('geo_locations.mat'));
               
               %backup existing file
               copyfile([pn,filesep,'geo_locations.mat'],[pn,filesep,'geo_locations.mat.bak']);
               
               %get number of cols and rows
               numcols = length(data.name);
               numrows = num_records(data);
               
               %init struct
               locations = cell2struct(cell(numrows,numcols),data.name,2);
               
               %populate multi-dimensional struct
               for c = 1:numcols
                  colname = data.name{c};
                  vals = extract(data,c);
                  if iscell(vals)
                     for r = 1:numrows
                        locations(r,1).(colname) = vals{r};
                     end
                  else
                     for r = 1:numrows
                        locations(r,1).(colname) = vals(r);
                     end
                  end
               end
                              
               %save updated polygons database
               save([pn,filesep,'geo_locations.mat'],'locations')
               
            else
               
               %get path for saving
               pn = fileparts(which('geo_polygons.mat'));
               
               %backup existing file
               copyfile([pn,filesep,'geo_polygons.mat'],[pn,filesep,'geo_polygons.mat.bak']);
               
               %get number of cols and rows
               numcols = length(data.name);
               numrows = num_records(data);
               
               %init struct
               polygons = cell2struct(cell(numrows,numcols),data.name,2);
               
               %populate multi-dimensional struct
               for c = 1:numcols
                  colname = data.name{c};
                  vals = extract(data,c);
                  if ~strcmp('Polygon',colname)
                     if iscell(vals)
                        for r = 1:numrows
                           polygons(r,1).(colname) = vals{r};
                        end
                     else
                        for r = 1:numrows
                           polygons(r,1).(colname) = vals(r);
                        end
                     end
                  else
                     for r = 1:numrows
                        polygons(r).Polygon = str2num(vals{r});
                     end
                  end                  
               end
               
               %save updated polygons database
               save([pn,filesep,'geo_polygons.mat'],'polygons')
               
            end
            
         else
            messagebox('init','No data were returned from the editor','','Error',[0.95 0.95 0.95])
         end
         
   end
   
end
