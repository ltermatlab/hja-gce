function ui_fetch_dataturbine(op,h_cb,cb)
%Opens a dialog box to retrieve data from a Data Turbine server
%
%syntax: ui_fetch_dataturbine(op,h_cb,cb)
%
%inputs:
%  op = operation ('init' to open dialog)
%  h_cb = uicontrol handle to use to store the entered string
%  cb = callback statement to execute upon hitting "Accept" button
%
%outputs:
%  none
%
%(c)2013 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 05-Jul-2013

%default to 'init' if no option specified
if nargin == 0
   op = 'init';
end

%init dialog
if strcmp(op,'init')
   
   %check for function dependencies
   if exist('DTsource2gce.m','file') == 2 && exist('DTget.m','file') == 2
      
      %check for missing input, supply defaults
      if exist('h_cb','var') ~= 1
         h_cb = [];
      end
      
      if exist('cb','var') ~= 1
         cb = '';
      end
      
      %check for prior instance, get position and close
      pos = [];
      if length(findobj) > 1
         h_dlg = findobj('tag','dlgFetchDataTurbine');
         if ~isempty(h_dlg)
            pos = get(h_dlg,'Position');
            delete(h_dlg)
         end
      end
      
      %init dialog size, color and font attributes
      bgcolor = [0.95 0.95 0.95];
      res = get(0,'ScreenSize');
      width = 650;
      if strcmp(computer,'PCWIN')
         font = 'Arial';
      else
         font = 'Helvetica';
      end
      if isempty(pos)
         pos = [max(0,0.5.*(res(3)-width)) max(50,0.5.*(res(4)-240)) width 220];
      end
      
      %check for settings file
      prefs = [];
      if exist('ui_fetch_dataturbine.mat','file') == 2
         try
            vars = load('ui_fetch_dataturbine.mat','-mat');
         catch
            vars = struct('null','');
         end
         if isfield(vars,'prefs')
            prefs = vars.prefs;
         end
      end
      
      %generate default preferences if none found
      if ~isstruct(prefs) || ~isfield(prefs,'server') || ~isfield(prefs,'source')
         prefs = struct('server','', ...
            'source','', ...
            'start_date','', ...
            'time_offset',0, ...
            'template','', ...
            'maxdays',0, ...
            'window',0);
      end
      
      %generate menu of metadata templates
      all_templates = get_templates();
      
      if isstruct(all_templates)
         templates = [{''} ; {all_templates.template}'];
         template_names = templates;
         template_names{1} = '<none>';
         if ~isempty(prefs.template)
            I_template = find(strcmp(prefs.template,templates));
         else
            I_template = [];
         end
         if ~isempty(I_template)
            template_val = I_template;
         else
            template_val = 1;
         end
      else
         templates = {''};
         template_val = 1;
      end
      
      %check for open editor windows to set new window checkbox state
      if length(findobj) > 1 && ~isempty(findobj('Tag','dlgDSEditor'))
         if ~isempty(h_cb) && ~isempty(cb)
            newwindowvis = 'on';
            newwindowval = prefs.window;
         else
            newwindowvis = 'off';
            newwindowval = 1;
         end
      else
         newwindowvis = 'off';
         newwindowval = 1;
      end
      
      %open dialog figure
      h_dlg = figure('Units','pixels', ...
         'Position',pos, ...
         'Visible','off', ...
         'Color',[0.8 0.8 0.8], ...
         'KeyPressFcn','figure(gcf)', ...
         'MenuBar','none', ...
         'Name','Fetch Data Turbine Data', ...
         'NumberTitle','off', ...
         'DefaultUIControlUnits','pixels', ...
         'CloseRequestFcn','ui_fetch_dataturbine(''cancel'')', ...
         'Tag','dlgFetchDataTurbine');
      
      %turn of dock controls
      if mlversion >= 7
         set(h_dlg,'WindowStyle','normal')
         set(h_dlg,'DockControls','off')
      end
      
      %init uicontrols
      uicontrol('Parent',h_dlg, ...
         'Position',[2 2 width-4 218], ...
         'Style','frame', ...
         'BackgroundColor',[0.9 0.9 0.9], ...
         'ForegroundColor',[0 0 0]);
      
      uicontrol('Parent',h_dlg, ...
         'Position',[8 46 width-16 165], ...
         'Style','frame', ...
         'BackgroundColor',bgcolor, ...
         'ForegroundColor',[0 0 0]);
      
      uicontrol('Parent',h_dlg, ...
         'Position',[14 180 width-30 22], ...
         'Style','text', ...
         'HorizontalAlign','left', ...
         'FontName',font, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'BackgroundColor',bgcolor, ...
         'HorizontalAlignment','left', ...
         'String','Specify a Data Turbine Server and Source');
      
      uicontrol('Parent',h_dlg, ...
         'Position',[30 140 80 22], ...
         'Style','text', ...
         'HorizontalAlign','left', ...
         'FontName',font, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'BackgroundColor',bgcolor, ...
         'HorizontalAlignment','left', ...
         'String','Server:', ...
         'Tag','lblServer');
      
      h_editServer = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[110 142 200 22], ...
         'FontName',font, ...
         'FontSize',10, ...
         'BackgroundColor',[1 1 1], ...
         'HorizontalAlignment','left', ...
         'String',prefs.server, ...
         'UserData',prefs.server, ...
         'Callback','ui_fetch_dataturbine(''server'')', ...
         'TooltipString','IP address or DNS name of Data Turbine server (including port if necessary)', ...
         'Tag','editServer');
      
      uicontrol('Parent',h_dlg, ...
         'Position',[340 140 70 22], ...
         'Style','text', ...
         'HorizontalAlign','left', ...
         'FontName',font, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'BackgroundColor',bgcolor, ...
         'String','Source:', ...
         'Tag','lblSource');
      
      h_editSource = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'BackgroundColor',[1 1 1], ...
         'Position',[410 141 180 22], ...
         'BackgroundColor',[1 1 1], ...
         'ForegroundColor',[0 0 0], ...
         'FontName',font, ...
         'FontSize',10, ...
         'HorizontalAlignment','left', ...
         'String',prefs.source, ...
         'UserData',prefs.source, ...
         'Callback','ui_fetch_dataturbine(''sources'')', ...
         'TooltipString','Data Turbine source name', ...
         'Tag','editSource');
      
      uicontrol('Parent',h_dlg, ...
         'Style','pushbutton', ...
         'Position',[600 141 30 22], ...
         'String','?', ...
         'TooltipString','Choose a server source', ...
         'Callback','ui_fetch_dataturbine(''sources'')', ...
         'Tag','cmdSource');
      
      %generate authentication fields
      uicontrol('Parent',h_dlg, ...
         'Position',[30 100 80 22], ...
         'Style','text', ...
         'HorizontalAlign','left', ...
         'FontName',font, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'BackgroundColor',bgcolor, ...
         'HorizontalAlignment','left', ...
         'String','Start Date:', ...
         'Tag','lblDate');
      
      h_editDate = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[110 102 120 22], ...
         'FontName',font, ...
         'FontSize',10, ...
         'BackgroundColor',[1 1 1], ...
         'HorizontalAlignment','left', ...
         'String',prefs.start_date, ...
         'Callback','ui_fetch_dataturbine(''date'')', ...
         'UserData',prefs.start_date, ...
         'TooltipString','Date of earliest data to request from the server (none to request all available data)', ...
         'Tag','editDate');
      
      uicontrol('Parent',h_dlg, ...
         'Position',[250 100 110 22], ...
         'Style','text', ...
         'HorizontalAlign','left', ...
         'FontName',font, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'BackgroundColor',bgcolor, ...
         'HorizontalAlignment','left', ...
         'String','Time offset (h):', ...
         'Tag','lblUser');
      
      h_editOffset = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[360 101 50 23], ...
         'BackgroundColor',[1 1 1], ...
         'ForegroundColor',[0 0 0], ...
         'FontName',font, ...
         'FontSize',10, ...
         'HorizontalAlignment','left', ...
         'String',int2str(prefs.time_offset), ...
         'UserData',int2str(prefs.time_offset), ...
         'Callback','ui_fetch_dataturbine(''number'')', ...
         'TooltipString','Offset from server time in hours (0 for none)', ...
         'Tag','editOffset');
      
      uicontrol('Parent',h_dlg, ...
         'Position',[430 100 100 22], ...
         'Style','text', ...
         'HorizontalAlign','left', ...
         'FontName',font, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'BackgroundColor',bgcolor, ...
         'HorizontalAlignment','left', ...
         'String','Days/Request:', ...
         'Tag','lblMaxDays');
      
      h_editMaxDays = uicontrol('Parent',h_dlg, ...
         'Style','edit', ...
         'Position',[530 101 50 23], ...
         'BackgroundColor',[1 1 1], ...
         'ForegroundColor',[0 0 0], ...
         'FontName',font, ...
         'FontSize',10, ...
         'HorizontalAlignment','left', ...
         'String',int2str(prefs.maxdays), ...
         'UserData',int2str(prefs.maxdays), ...
         'Callback','ui_fetch_dataturbine(''number'')', ...
         'TooltipString','Maximum days to retrieve per request to limit load on the server (0 for all at once)', ...
         'Tag','editMaxDays');
      
      uicontrol('Parent',h_dlg, ...
         'Position',[30 59 80 22], ...
         'Style','text', ...
         'HorizontalAlign','left', ...
         'FontName',font, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'BackgroundColor',bgcolor, ...
         'HorizontalAlignment','left', ...
         'String','Template:', ...
         'Tag','lblTemplate');
      
      %generate url edit box
      h_popTemplate = uicontrol('Parent',h_dlg, ...
         'Style','popupmenu', ...
         'Position',[110 61 470 23], ...
         'BackgroundColor',[1 1 1], ...
         'ForegroundColor',[0 0 0], ...
         'FontName',font, ...
         'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'String',template_names, ...
         'Value',template_val, ...
         'TooltipString','Metadata template to apply to retrieved data', ...
         'Tag','popTemplate');
      
      %generate close option checkbox
      h_chkClose = uicontrol('Parent',h_dlg, ...
         'Style','checkbox', ...
         'Position',[140 15 110 22], ...
         'HorizontalAlign','left', ...
         'FontName',font, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'BackgroundColor',[0.9 0.9 0.9], ...
         'String','Close dialog', ...
         'TooltipString','Option to close the import dialog after successfully retrieving data table(s)', ...
         'Value',1, ...
         'Tag','chkClose');
      
      %generate new window
      h_chkWindow = uicontrol('Parent',h_dlg, ...
         'Style','checkbox', ...
         'Position',[280 15 200 22], ...
         'HorizontalAlign','left', ...
         'FontName',font, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'BackgroundColor',[0.9 0.9 0.9], ...
         'String','Open data in new window', ...
         'TooltipString','Option to open downloaded datasets in a new editor window', ...
         'Value',newwindowval, ...
         'Enable',newwindowvis, ...
         'Tag','chkClose');
      
      %generate cancel and proceed
      uicontrol('Parent',h_dlg, ...
         'Style','pushbutton', ...
         'Callback','ui_fetch_dataturbine(''cancel'')', ...
         'Position',[10 15 60 25], ...
         'String','Cancel', ...
         'Tag','cancel');
      
      h_cmdEval = uicontrol('Parent',h_dlg, ...
         'Style','pushbutton', ...
         'Callback','ui_fetch_dataturbine(''eval'')', ...
         'Position',[width-70 15 60 25], ...
         'String','Proceed', ...
         'Enable','off', ...
         'Tag','accept');
      
      %generate object cache
      uih = struct('h_cb',h_cb, ...
         'cb',cb, ...
         'editServer',h_editServer, ...
         'editSource',h_editSource, ...
         'editDate',h_editDate, ...
         'editOffset',h_editOffset, ...
         'editMaxDays',h_editMaxDays, ...
         'popTemplate',h_popTemplate, ...
         'chkWindow',h_chkWindow, ...
         'chkClose',h_chkClose, ...
         'cmdEval',h_cmdEval, ...
         'prefs','', ...
         'templates','');
      uih.prefs = prefs;
      uih.templates = templates;
      
      %init dialog
      set(h_dlg,'Visible','on','UserData',uih)
      
      %check for valid server/source
      ui_fetch_dataturbine('buttons')
      
   else
      msg = 'Required DTMatlabTK functions (DTsource2gce.m, DTget.m) are not present in the MATLAB path';
      messagebox('init',msg,'','Error',[0.95 0.95 0.95])
   end
   
else
   
   %get dialog handle
   h_dlg = gcf;
   
   if strcmp(get(h_dlg,'Tag'),'dlgFetchDataTurbine')
      
      %get cached ui data
      uih = get(h_dlg,'UserData');
      
      switch op
         
         case 'cancel'  %cancel operation
            
            delete(h_dlg)
            drawnow
            
            ui_aboutgce('reopen')  %check for last window
            
         case 'eval'  %evaluate callback
            
            %get server & source
            server = deblank(get(uih.editServer,'String'));
            source = deblank(get(uih.editSource,'String'));

            %get other options
            startdate = deblank(get(uih.editDate,'String'));
            time_offset = str2double(get(uih.editOffset,'String'));
            maxdays = str2double(get(uih.editMaxDays,'String'));
            closeopt = get(uih.chkClose,'Value');
            windowopt = get(uih.chkWindow,'Value');
            
            %get template selection
            templateval = get(uih.popTemplate,'Value');
            template = uih.templates{templateval};
            
            %fetch data, changing to watch cursor in case it takes time
            set(h_dlg,'Pointer','watch'); drawnow
            [s,msg] = fetch_data_turbine(server,source,startdate,time_offset,template,maxdays);
            set(h_dlg,'Pointer','arrow'); drawnow
            
            if ~isempty(s)
               
               %update preferences
               prefs = struct('server',server, ...
                  'source',source, ...
                  'start_date',startdate, ...
                  'time_offset',time_offset, ...
                  'template',template, ...
                  'maxdays',maxdays, ...
                  'window',windowopt);  %#ok<NASGU>
               
               %save preferences
               fn = which('ui_fetch_dataturbine.mat');
               if isempty(fn)
                  fn = [gce_homepath,filesep,'settings',filesep,'ui_fetch_dataturbine.mat'];
               end               
               save(fn,'prefs')
               
               %check for close option
               if closeopt == 1
                  delete(h_dlg)
               end
                  
               %cache data and execute callback if specified
               err = 0;  %init error flag
               if ~isempty(uih.h_cb) && ~isempty(uih.cb) && windowopt == 0
                  h_fig = parent_figure(uih.h_cb);
                  if ~isempty(h_fig)
                     figure(h_fig)
                     set(uih.h_cb,'UserData',s)
                     drawnow
                     if ~isempty(uih.cb)
                        try
                           eval(uih.cb)
                        catch
                           err = 1;
                        end
                     end
                  else
                     err = 1;
                  end
               else  %open in new editor window
                  ui_editor('init',s)
               end
               
               %display error message
               if err == 1
                  ui_editor('init',s)
                  drawnow
                  messagebox('init','Errors occurred returning the structure to the original window', ...
                     '','Error',[.9 .9 .9])
               end
                              
            else
               messagebox('init',['No data were retrieved: ',msg],'','Error',[0.95 0.95 0.95])
            end            
            
         case 'date'  %validate dates
            
            %get entry
            str = deblank(get(uih.editDate,'String'));
            lastval = get(uih.editDate,'UserData');
            
            %check for valid entry
            if isempty(str)
               set(uih.editDate,'String','','UserData','')
            else
               try
                  dt = datenum(str);
               catch
                  dt = NaN;
               end
               if ~isnan(dt)
                  set(uih.editDate,'String',str,'UserData',str)
               else
                  %reset invalid date
                  set(uih.editDate,'String',lastval)
                  drawnow
                  messagebox('init','Invalid date - value reset','','Error',[0.95 0.95 0.95]);
               end
            end
            
         case 'number'  %validate numeric entries
            
            %get handle and tag of field
            h_cb = gcbo;
            tag = get(h_cb,'Tag');
            
            %get entry
            str = deblank(get(h_cb,'String'));
            lastval = get(h_cb,'UserData');
            
            %validate entry
            if isempty(str)
               str = '0';
            elseif ~isnan(str2double(str))
               %check for MaxDays and truncate string
               if strcmp(tag,'editMaxDays')
                  num = str2double(str);
                  if num >= 0
                     str = int2str(ceil(num));
                  else
                     str = '';  %negative value - reset
                  end
               end
            else
               str = '';
            end
            
            %check for valid entry
            if ~isempty(str)
               set(h_cb,'String',str,'UserData',str)
            else
               %reset invalid number
               set(h_cb,'String',lastval)
               drawnow
               messagebox('init','Invalid number - value reset','','Error',[0.95 0.95 0.95]);
            end
            
         case 'buttons'  %check for valid server/source
            
            %get server & source
            server = deblank(get(uih.editServer,'String'));
            source = deblank(get(uih.editSource,'String'));
            
            %check for non-empty server & source and enable/disable Accept button
            if ~isempty(server) && ~isempty(source)
               set(uih.editServer,'String',server);
               set(uih.editSource,'String',source);
               set(uih.cmdEval,'Enable','on')
            else
               set(uih.cmdEval,'Enable','off')
            end
            
            drawnow
            
         case 'server'  %clear source field on server change
            
            %get new and old server strings
            new_server = deblank(get(uih.editServer,'String'));
            old_server = deblank(get(uih.editServer,'UserData'));
            
            %check for change - reset source and button states
            if ~strcmp(new_server,old_server)
               set(uih.editServer,'UserData',new_server)
               set(uih.editSource,'String','')
               ui_fetch_dataturbine('buttons')
            end
            
         case 'sources'  %look up sources for a data turbine server
            
            %check for Data Turbine in the Java class path, try to add if not present
            dt_check = check_data_turbine;
            
            %init message
            msg = '';
            
            %confirm rbnb.jar is loaded
            if dt_check == 1
               
               %get server address
               server = deblank(get(uih.editServer,'String'));
               
               if ~isempty(server)
                  
                  %get DTstruct, set server and source
                  dts = DTstruct;
                  dts.server = server;
                  dts.source='*';
                  
                  %get sources using DTlist
                  try
                     dtget = DTlist(dts);
                     sources = dtget.source;
                  catch e
                     sources = [];
                     msg = ['Error running DTList (',e.message,')'];
                  end
                  
                  %bring up a list dialog for choosing a source
                  if ~isempty(sources) && (iscell(sources) || ~strcmp('*',sources))
                     Isel = listdialog('liststring',sources(:), ...
                        'name','Select a Source', ...
                        'promptstring','Select a Data Turbine Source', ...
                        'selectionmode','single');
                     if ~isempty(Isel)
                        source = sources{Isel};
                        set(uih.editSource,'String',source)
                        ui_fetch_dataturbine('buttons')
                     end
                  else
                     if isempty(msg)
                        msg = 'No valid sources were found';
                     end
                  end
                  
               else
                  msg = 'No server address is specified';
               end
               
            else
               msg = 'Data Turbine Java archive (rbnb.jar) is not present in the Java classpath';
            end
            
            %display error message
            if ~isempty(msg)
               messagebox('init',msg,'','Error',[0.95 0.95 0.95])
            end
            
      end
      
   end
   
end

return


function status = check_data_turbine()
%checks for Data Turbine (rbnb.jar) in the Java class path and attemps to add it if not found
%
%input:
%  none
%
%output:
%  status = Data Turbine status flag (0 = not present, 1 = present)

%init output
status = 0;

%get Java classpath
jcp = javaclasspath;

%search for 'rbnb.jar'
Irbnb = strfind(jcp,'rbnb.jar');

%check for match
dt_check = length(find(~cellfun('isempty',Irbnb)));

if dt_check > 0
   status = 1;
elseif exist('rbnb.jar','file') == 2
   try
      javaaddpath(which('rbnb.jar'))
      status = 1;
   catch                                                                                  %#ok<CTCH>
      status = 0;
   end
end
