 function ui_fetch_eml_data(op,h_cb,cb)
%Opens a dialog box to retrieve EML-described data tables into the GCE Data Toolbox
%
%syntax: ui_fetch_eml_data(op,h_cb,cb)
%
%inputs:
%  op = operation ('init' to open dialog)
%  h_cb = uicontrol handle to use to store the entered string
%  cb = callback statement to execute upon hitting "Accept" button
%
%outputs:
%  none
%
%(c)2012-2013 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 20-Jun-2013

%default to 'init' if no option specified
if nargin == 0
   op = 'init';
end

%init dialog
if strcmp(op,'init')
   
   %check for missing input, supply defaults
   if exist('h_cb','var') ~= 1
      h_cb = [];
   end
   
   if exist('cb','var') ~= 1
      cb = '';
   end
   
   %check for prior instance and close
   if length(findobj) > 1
      h_dlg = findobj('tag','dlgFetchEMLData');
      if ~isempty(h_dlg)
         delete(h_dlg)
      end
   end
   
   %init dialog size, color and font attributes
   bgcolor = [0.95 0.95 0.95];
   res = get(0,'ScreenSize');
   width = 850;
   if strcmp(computer,'PCWIN')
      font = 'Arial';
   else
      font = 'Helvetica';
   end
   
   %check for settings file
   prefs = [];
   if exist('ui_fetch_eml_data.mat','file') == 2
      try
         vars = load('ui_fetch_eml_data.mat','-mat');
      catch
         vars = struct('null','');
      end
      if isfield(vars,'prefs')
         prefs = vars.prefs;
      end
   end
   
   %generate default preferences if none found
   if ~isstruct(prefs) || ~isfield(prefs,'system') || ~isfield(prefs,'system_names') || ~isfield(prefs,'system_labels') || ~isfield(prefs,'docid')
      
      %init prefs structure
      prefs = struct('system_names','', ...
         'system_labels','', ...
         'system','', ...
         'docid','', ...
         'cachedata',0, ...
         'window',0, ...
         'entities','all');
      
      %define default system names
      prefs.system_names = {'File','','PASTA','PASTA-S','LTER','KNB','GCE'};
      prefs.system_labels = {'Local File';'Custom URL';'LTER PASTA';'LTER PASTA (staging)';'LTER Metacat';'KNB Metacat';'GCE-LTER Metabase'};
      prefs.system = 'PASTA';
      system_val = 3;
      
      %set default browse option
      browse_vis = 'off';
            
   else
      
      %look up system value for popup menu
      system_val = find(strcmp(prefs.system,prefs.system_names));
      if isempty(system_val)
         system_val = 3;
      end
      if system_val == 1
         browse_vis = 'on';
      else
         browse_vis = 'off';
      end
      
      %check for legacy prefs without entities field
      if ~isfield(prefs,'entities')
         prefs.entities = 'all';
      end
      
   end
   
   %set entities option radio button values
   if strcmp(prefs.entities,'selected')
      val_entities_all = 0;
      val_entities_sel = 1;
   else
      val_entities_all = 1;
      val_entities_sel = 0;
   end
   
   %open dialog figure
   h_dlg = figure('Units','pixels', ...
      'Position',[max(0,0.5.*(res(3)-width)) max(50,0.5.*(res(4)-240)) width 220], ...
      'Visible','off', ...
      'Color',[0.8 0.8 0.8], ...
      'KeyPressFcn','figure(gcf)', ...
      'MenuBar','none', ...
      'Name','Fetch EML Data', ...
      'NumberTitle','off', ...
      'DefaultUIControlUnits','pixels', ...
      'CloseRequestFcn','ui_fetch_eml_data(''cancel'')', ...
      'Tag','dlgFetchEMLData');
   
   %turn of dock controls
   if mlversion >= 7
      set(h_dlg,'WindowStyle','normal')
      set(h_dlg,'DockControls','off')
   end
   
   %init uicontrols
   uicontrol('Parent',h_dlg, ...
      'Position',[2 2 width-4 218], ...
      'Style','frame', ...
      'BackgroundColor',[0.9 0.9 0.9], ...
      'ForegroundColor',[0 0 0]);
   
   uicontrol('Parent',h_dlg, ...
      'Position',[8 46 width-16 165], ...
      'Style','frame', ...
      'BackgroundColor',bgcolor, ...
      'ForegroundColor',[0 0 0]);
   
   uicontrol('Parent',h_dlg, ...
      'Position',[14 180 width-30 22], ...
      'Style','text', ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',bgcolor, ...
      'HorizontalAlignment','left', ...
      'String','Specify a System and Document ID (packageID or Accession) or a Custom URL for an EML Document');
   
   uicontrol('Parent',h_dlg, ...
      'Position',[30 140 70 22], ...
      'Style','text', ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',bgcolor, ...
      'HorizontalAlignment','left', ...
      'String','System:', ...
      'Tag','lblSystem');
   
   h_popSystem = uicontrol('Parent',h_dlg, ...
      'Style','popupmenu', ...
      'Position',[100 142 180 22], ...
      'FontName',font, ...
      'FontSize',10, ...
      'BackgroundColor',[1 1 1], ...
      'HorizontalAlignment','left', ...
      'String',prefs.system_labels, ...
      'UserData',prefs.system_names, ...
      'Value',system_val, ...
      'Callback','ui_fetch_eml_data(''system'')', ...
      'Tag','popSystem');
   
   uicontrol('Parent',h_dlg, ...
      'Position',[310 140 140 22], ...
      'Style','text', ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',bgcolor, ...
      'String','packageID/Dataset:', ...
      'Tag','lblDoc');
   
   h_editDoc = uicontrol('Parent',h_dlg, ...
      'Style','edit', ...
      'BackgroundColor',[1 1 1], ...
      'Position',[450 141 150 22], ...
      'BackgroundColor',[1 1 1], ...
      'ForegroundColor',[0 0 0], ...
      'FontName',font, ...
      'FontSize',10, ...
      'HorizontalAlignment','left', ...
      'String',prefs.docid, ...
      'Callback','ui_fetch_eml_data(''system'')', ...
      'Tag','editDOC');
   
   %generate entity radio buttons and pick list
   uicontrol('Parent',h_dlg, ...
      'Position',[630 140 60 22], ...
      'Style','text', ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',bgcolor, ...
      'HorizontalAlignment','left', ...
      'String','Entities:', ...
      'Tag','lblEntities');
   
   h_radioEntitiesAll = uicontrol('Parent',h_dlg, ...
      'Style','radio', ...
      'Position',[690 143 50 22], ...
      'BackgroundColor',bgcolor, ...
      'ForegroundColor',[0 0 0], ...
      'FontName',font, ...
      'FontSize',10, ...
      'HorizontalAlignment','left', ...
      'String','All', ...
      'Value',val_entities_all, ...
      'Callback','ui_fetch_eml_data(''entities'')', ...
      'TooltipString','Automatically download all compatible dataTable entities', ...
      'Tag','radioEntitiesAll');
   
   h_radioEntitiesSel = uicontrol('Parent',h_dlg, ...
      'Style','radio', ...
      'Position',[740 143 80 22], ...
      'BackgroundColor',bgcolor, ...
      'ForegroundColor',[0 0 0], ...
      'FontName',font, ...
      'FontSize',10, ...
      'HorizontalAlignment','left', ...
      'String','Choose', ...
      'Value',val_entities_sel, ...
      'Callback','ui_fetch_eml_data(''entities'')', ...
      'TooltipString','Choose which dataTable entities to download if more than one is defined', ...
      'Tag','radioEntitiesSel');
   
   h_lblURL = uicontrol('Parent',h_dlg, ...
      'Position',[30 60 70 22], ...
      'Style','text', ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',bgcolor, ...
      'HorizontalAlignment','left', ...
      'String','URL:', ...
      'Tag','lblURL');
   
   %generate url edit box
   h_editURL = uicontrol('Parent',h_dlg, ...
      'Style','edit', ...
      'Position',[100 61 660 23], ...
      'BackgroundColor',[1 1 1], ...
      'ForegroundColor',[0 0 0], ...
      'FontName',font, ...
      'FontSize',10, ...
      'HorizontalAlignment','left', ...
      'String','', ...
      'Enable','off', ...
      'UserData',system_val, ...
      'Tag','editURL');
   
   %generate authentication fields
   uicontrol('Parent',h_dlg, ...
      'Position',[30 100 70 22], ...
      'Style','text', ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',bgcolor, ...
      'HorizontalAlignment','left', ...
      'String','Login:', ...
      'Tag','lblAuth');
   
   h_popAuth = uicontrol('Parent',h_dlg, ...
      'Style','popupmenu', ...
      'Position',[100 102 180 22], ...
      'FontName',font, ...
      'FontSize',10, ...
      'BackgroundColor',[1 1 1], ...
      'HorizontalAlignment','left', ...
      'String',{'None';'LTER LDAP';'KNB LDAP';'Web Server'}, ...
      'Value',1, ...
      'Callback','ui_fetch_eml_data(''system'')', ...
      'UserData',{'','LTER','KNB','basic'}, ...
      'Tag','popAuth');
   
   uicontrol('Parent',h_dlg, ...
      'Position',[300 100 75 22], ...
      'Style','text', ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',bgcolor, ...
      'HorizontalAlignment','left', ...
      'String','Username:', ...
      'Tag','lblUser');
   
   h_editUsername = uicontrol('Parent',h_dlg, ...
      'Style','edit', ...
      'Position',[375 101 160 23], ...
      'BackgroundColor',[1 1 1], ...
      'ForegroundColor',[0 0 0], ...
      'FontName',font, ...
      'FontSize',10, ...
      'HorizontalAlignment','left', ...
      'String','', ...
      'Enable','off', ...
      'Tag','editUsername');
   
   uicontrol('Parent',h_dlg, ...
      'Position',[555 100 75 22], ...
      'Style','text', ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',bgcolor, ...
      'HorizontalAlignment','left', ...
      'String','Password:', ...
      'Tag','lblPassword');
   
   h_editPassword = uicontrol('Parent',h_dlg, ...
      'Style','edit', ...
      'Position',[630 101 190 23], ...
      'BackgroundColor',[1 1 1], ...
      'ForegroundColor',[0 0 0], ...
      'FontName',font, ...
      'FontSize',10, ...
      'HorizontalAlignment','left', ...
      'String','', ...
      'Enable','off', ...
      'Callback','ui_fetch_eml_data(''password'')', ...
      'Tag','editPassword');
   
   %generate browse directory button
   h_cmdBrowse = uicontrol('Parent',h_dlg, ...
      'Style','pushbutton', ...
      'Position',[765 60 55 25], ...
      'String','Browse', ...
      'Enable',browse_vis, ...
      'TooltipString','Browse to select a local EML file', ...
      'Callback','ui_fetch_eml_data(''browse'')', ...
      'UserData',pwd);
   
   %generate close option checkbox
   h_chkClose = uicontrol('Parent',h_dlg, ...
      'Style','checkbox', ...
      'Position',[150 15 150 22], ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',[0.9 0.9 0.9], ...
      'String','Close dialog', ...
      'TooltipString','Option to close the import dialog after successfully retrieving data table(s)', ...
      'Value',1, ...
      'Tag','chkClose');
   
   %generate new window
   h_chkWindow = uicontrol('Parent',h_dlg, ...
      'Style','checkbox', ...
      'Position',[300 15 190 22], ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',[0.9 0.9 0.9], ...
      'String','Open in new window', ...
      'TooltipString','Option to open downloaded datasets in a new editor window', ...
      'Value',prefs.window, ...
      'Tag','chkClose');
   
   %generate cached data option
   h_chkCache = uicontrol('Parent',h_dlg, ...
      'Style','checkbox', ...
      'Position',[490 15 190 22], ...
      'HorizontalAlign','left', ...
      'FontName',font, ...
      'FontSize',10, ...
      'FontWeight','bold', ...
      'BackgroundColor',[0.9 0.9 0.9], ...
      'String','Use cached data objects', ...
      'TooltipString','Option to use local copies of EML-described data objects if they exist', ...
      'Value',prefs.cachedata, ...
      'Tag','chkCache');
   
   %generate cancel and proceed
   uicontrol('Parent',h_dlg, ...
      'Style','pushbutton', ...
      'Callback','ui_fetch_eml_data(''cancel'')', ...
      'Position',[10 15 60 25], ...
      'String','Cancel', ...
      'Tag','cancel');
   
   uicontrol('Parent',h_dlg, ...
      'Style','pushbutton', ...
      'Callback','ui_fetch_eml_data(''eval'')', ...
      'Position',[width-70 15 60 25], ...
      'String','Accept', ...
      'Tag','accept');
   
   %generate object cache
   uih = struct('h_cb',h_cb, ...
      'cb',cb, ...
      'popSystem',h_popSystem, ...
      'chkCache',h_chkCache, ...
      'chkWindow',h_chkWindow, ...
      'chkClose',h_chkClose, ...
      'cmdBrowse',h_cmdBrowse, ...
      'editDoc',h_editDoc, ...
      'popAuth',h_popAuth, ...
      'editUsername',h_editUsername, ...
      'editPassword',h_editPassword, ...
      'radioEntitiesAll',h_radioEntitiesAll, ...
      'radioEntitiesSel',h_radioEntitiesSel, ...
      'lblURL',h_lblURL, ...
      'editURL',h_editURL, ...
      'prefs','');
   uih.prefs = prefs;
   
   %init dialog
   set(h_dlg,'Visible','on','UserData',uih)
   drawnow
   
   %set url state based on system setting and docid
   ui_fetch_eml_data('system')
   
else
   
   %get dialog handle
   h_dlg = gcf;
   
   if strcmp(get(h_dlg,'Tag'),'dlgFetchEMLData')
      
      %get cached ui data
      uih = get(h_dlg,'UserData');
      
      switch op
         
         case 'cancel'  %cancel operation
            
            delete(h_dlg)
            drawnow
            
            ui_aboutgce('reopen')  %check for last window
            
         case 'eval'  %evaluate callback
            
            %get url
            url = deblank(get(uih.editURL,'String'));
            
            if ~isempty(url)
               
               %update preferences
               fn = which('ui_fetch_eml_data.mat');
               if isempty(fn)
                  fn = [gce_homepath,filesep,'settings',filesep,'ui_fetch_eml_data.mat'];
               end
               
               %get system selection
               system_val = get(uih.popSystem,'Value');
               system_names = get(uih.popSystem,'UserData');
               system_name = system_names{system_val};
               
               %get entity option
               if get(uih.radioEntitiesAll,'Value') == 1
                  entityopt = 'all';
               else
                  entityopt = 'selected';
               end
               
               %get authentication info if https protocol and authentication specified
               authval = get(uih.popAuth,'Value');
               if authval > 1 && strncmpi('https://',url,8)
                  
                  %get authorization type
                  authlist = get(uih.popAuth,'UserData');
                  authtype = authlist{authval};
                  
                  %init username/password
                  username = get(uih.editUsername,'String');
                  password = get(uih.editPassword,'UserData');
                  
                  %reformat username to LDAP DN format for LTER/KNB
                  switch authtype
                     case 'LTER'
                        username = ['uid=',username,',o=LTER,dc=ecoinformatics,dc=org'];
                     case 'KNB'
                        username = ['uid=',username,',o=KNB,dc=ecoinformatics,dc=org'];
                  end
                  
               else
                  
                  %blank user/password
                  username = '';
                  password = '';      
                  
               end
               
               %get docid
               docid = deblank(get(uih.editDoc,'String'));
               
               %get preferences
               cachedata = get(uih.chkCache,'Value');
               closeoption = get(uih.chkClose,'Value');
               newwindow = get(uih.chkWindow,'Value');
               
               %update preferences structure
               prefs = uih.prefs;
               prefs.system = system_name;
               prefs.docid = docid;
               prefs.cachedata = cachedata;
               prefs.window = newwindow;
               prefs.entities = entityopt;
               
               %add system names array after declaration to avoid multi-dimensional structure format
               prefs.system_names = system_names;
               
               %save prefs
               save(fn,'prefs')
               
               %get stored handle and callback
               h_cb = uih.h_cb;
               cb = uih.cb;
               
               %get parent figure handle
               if ~isempty(h_cb)
                  h_fig = parent_figure(uih.h_cb);
               else
                  h_fig = [];
               end
               
               %check for empty handle, instantiate new editor instance
               if newwindow == 1 || isempty(h_fig) || isempty(h_cb)
                  ui_editor('init')
                  h_fig = gcf;
                  h_cb = findobj(h_fig,'Tag','mnuFetchEMLData');
                  cb = 'ui_editor(''imp_emldata2'',cachedata)';
               end
               
               %check for target figure
               if ~isempty(h_fig)
                  
                  %set focus to target figure and store url in callback handle
                  %figure(h_fig)
                  set(h_cb,'UserData',{url,username,password,entityopt})
                  err = [];
                  
                  %execute callback
                  try
                     figure(h_fig)
                     set(h_fig,'Pointer','watch'); drawnow
                     eval(cb)
                     set(h_fig,'Pointer','arrow'); drawnow
                  catch err
                  end
                  
                  %check for errors
                  if ~isempty(err)
                     figure(h_dlg)  %restore focus to request dialog and display error message
                     messagebox('init',err.message,'','Error',[0.9 0.9 0.9],0)
                  elseif closeoption == 1
                     delete(h_dlg)  %close dialog window
                     drawnow
                  end
                  
               else
                  messagebox('init','An error occurred returning the EML data to a Data Editor window', ...
                     '','Error',[0.9 0.9 0.9],0)
               end
               
            else  %invalid url or retrieval error
               messagebox('init','No valid EML URL was specified - import cancelled','','Error',[0.9 0.9 0.9],0)
            end
            
         case 'browse'  %browse for file
            
            %get last path and cache current path
            lastpath = get(uih.cmdBrowse,'UserData');
            curpath = pwd;
            
            %prompt for file
            cd(lastpath)
            [fn,pn] = uigetfile('*.xml','Select an EML file to import');
            drawnow
            cd(curpath)
            
            %check for cancel, set url
            if ischar(fn)
               set(uih.editURL,'String',[pn,fn])
               set(uih.cmdBrowse,'UserData',pn)
            end
            
         case 'entities'  %handle entity loading option radio buttons
           
            tag = get(gcbo,'Tag');
            
            if strcmp(tag,'radioEntitiesAll')
               set(uih.radioEntitiesAll,'Value',1)
               set(uih.radioEntitiesSel,'Value',0)
            else
               set(uih.radioEntitiesAll,'Value',0)
               set(uih.radioEntitiesSel,'Value',1)
            end
            
            drawnow
            
         case 'password'  %copy password to userdata and clear
            
            %get password string
            pw = get(uih.editPassword,'String');
            
            %cache in userdata, clear string for security
            set(uih.editPassword,'String','(set)','UserData',pw)
            
         case 'system'  %evaluate system changes and regenerate URL
            
            %get uicontrol settings
            system_val = get(uih.popSystem,'Value');
            system_list = get(uih.popSystem,'Userdata');
            dataset = deblank(get(uih.editDoc,'String'));
            system_name = system_list{system_val};
            lastsystem = get(uih.editURL,'UserData');  %get last selected system
                           
            %init flag for display of login fields
            loginvis = 0;
            
            %check for specific system
            if ~isempty(system_name) && ~strcmp(system_name,'File')
               
               %check for non-empty data set, generate url
               if ~isempty(dataset)
                  
                  %generate system-specific url pattern
                  switch system_name
                     
                     case 'PASTA'  %PASTA web service
                        
                        %convert dataset without revision to 'newest'
                        dataset = strrep(dataset,'.','/');
                        if length(strfind(dataset,'/')) == 1
                           dataset = [dataset,'/newest'];
                        end
                        
                        %replace document and revision numbers with slashes for PASTA web service
                        url = ['https://pasta.lternet.edu/package/metadata/eml/',strrep(dataset,'.','/')];
                        
                        loginvis = 1;
                        
                     case 'PASTA-S'  %PASTA staging web service
                        
                        %convert dataset without revision to 'newest'
                        dataset = strrep(dataset,'.','/');
                        if length(strfind(dataset,'/')) == 1
                           dataset = [dataset,'/newest'];
                        end
                        
                        %replace document and revision numbers with slashes for PASTA web service
                        url = ['https://pasta-s.lternet.edu/package/metadata/eml/',strrep(dataset,'.','/')];
                        
                        loginvis = 1;
                        
                     case 'LTER'  %LTER metacat
                        
                        url = ['http://tropical.lternet.edu:8080/knb/metacat?action=read&qformat=xml&docid=',dataset];
                        
                     case 'KNB'  %KNB metacat
                        
                        url = ['http://knb.ecoinformatics.org/knb/metacat?action=read&qformat=xml&docid=',dataset];
                        
                     case 'GCE'  %GCE Metabase
                        
                        %determine url syntax based on doc id form
                        if strncmpi('knb-lter-gce.',dataset,13)
                           %parse id from knb packageID, removing version (not supported by GCE Metabase)
                           dataset = strtok(dataset(13:end),'.');
                           url = ['http://gce-lter.marsci.uga.edu/public/app/send_eml.asp?metacat=yes&dataset=',dataset];
                        elseif  ~isnan(str2double(dataset))
                           %use numeric data set id, removing version (not supported by GCE Metabase)
                           dataset = strtok(dataset,'.');
                           url = ['http://gce-lter.marsci.uga.edu/public/app/send_eml.asp?metacat=yes&dataset=',dataset];
                        else
                           %use accession syntax
                           url = ['http://gce-lter.marsci.uga.edu/public/app/send_eml.asp?accession=',dataset];
                        end
                        
                     otherwise  %unsupported
                        url = '';
                        
                  end
                  
                  %update url field and lock
                  set(uih.lblURL,'String','URL:')
                  set(uih.editURL,'Enable','off','String',url)
                  set(uih.cmdBrowse,'Enable','off')
                  
                  %update login fields
                  if loginvis == 0
                     set(uih.popAuth,'Value',1,'Enable','off')
                     set(uih.editUsername,'Enable','off')
                     set(uih.editPassword,'Enable','off','String','','UserData','')
                  else
                     set(uih.popAuth,'Enable','on')
                     if get(uih.popAuth,'Value') > 1
                        set(uih.editUsername,'Enable','on')
                        set(uih.editPassword,'Enable','on')
                     else
                        set(uih.editUsername,'Enable','off')
                        set(uih.editPassword,'Enable','off','String','','UserData','')
                     end
                  end                     
                  
               else  %no data set - lock and clear url

                  set(uih.lblURL,'String','URL:')
                  set(uih.editURL,'Enable','off','String','')
                  set(uih.cmdBrowse,'Enable','off')
                  
                  %check for PASTA system, handle authorization fields
                  if strncmpi('PASTA',system_name,5)
                     set(uih.popAuth,'Enable','on')
                     if get(uih.popAuth,'Value') > 1
                        set(uih.editUsername,'Enable','on')
                        set(uih.editPassword,'Enable','on')
                     else
                        set(uih.editUsername,'Enable','off')
                        set(uih.editPassword,'Enable','off','String','','UserData','')
                     end
                  else
                     set(uih.popAuth,'Value',1,'Enable','off')
                     set(uih.editUsername,'Enable','off')
                     set(uih.editPassword,'Enable','off','String','','UserData','')
                  end
                  
               end
               
            elseif isempty(system_name)  %custom url
               
               set(uih.lblURL,'String','URL:')
               
               %unlock url field and clear if last system was file
               if lastsystem == 1
                  set(uih.editURL,'String','','Enable','on')
               else
                  set(uih.editURL,'Enable','on')
               end
               
               %hide browse button
               set(uih.cmdBrowse,'Enable','off')
               
               %enable login
               set(uih.popAuth,'Enable','on')
               if get(uih.popAuth,'Value') > 1
                  set(uih.editUsername,'Enable','on')
                  set(uih.editPassword,'Enable','on')
               else
                  set(uih.editUsername,'Enable','off')
                  set(uih.editPassword,'Enable','off','String','','UserData','')
               end
               
            else  %file
               
               %enable and clear url, clear dataset, turn on browse button
               set(uih.lblURL,'String','File:')
               set(uih.editURL,'String','','Enable','on')
               set(uih.editDoc,'String','')
               set(uih.cmdBrowse,'Enable','on')
               
               %disable authorization fields
               set(uih.popAuth,'Value',1,'Enable','off')
               set(uih.editUsername,'Enable','off')
               set(uih.editPassword,'Enable','off','String','')
               
            end
            
            set(uih.editURL,'UserData',system_val)  %update last system
            
            drawnow
            
      end
      
   end
   
end
