function ui_splitseries(op,s,h_cb,cb)
%GCE Data Toolbox dialog for splitting a compound data series based on values in a specified column
%and serially joining subsets to form a standard table using 'split_dataseries'
%
%syntax:  ui_splitseries(op,s)
%
%input:
%  op = operation (default = 'init' to initialize dialog)
%  s = data structure
%
%output:
%  none
%
%
%(c)2002-2013 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 14-Feb-2013

if nargin == 0
   op = 'init';
elseif isstruct(op)
   s = op;
   op = 'init';
end

if exist('s','var') ~= 1
   s = [];
end

if strcmp(op,'init')  %build gui

   if length(findobj) > 1
      h_dlg = findobj('Tag','dlgSplitSeries');
   else
      h_dlg = [];
   end

   if ~isempty(h_dlg)  %set focus to existing dialog

      figure(h_dlg)
      drawnow

   else  %create new dialog

      if gce_valid(s,'data')

         if exist('h_cb','var') ~= 1
            h_cb = [];
         end

         if exist('cb','var') ~= 1
            cb = '';
         end

         %check for valid splitting column
         I_validsplit = find(strcmp(s.datatype,'s') | strcmp(s.datatype,'d'));

         if ~isempty(I_validsplit)

            %generate split column list array
            splitlist = concatcellcols([s.name(I_validsplit)',repmat({'  ('},length(I_validsplit),1), ...
                  s.units(I_validsplit)',repmat({')'},length(I_validsplit),1)]);

            %generate general column list array
            collist = concatcellcols([s.name',repmat({'  ('},length(s.name),1), ...
                  s.units',repmat({')'},length(s.name),1)]);

            %init screen info arrays
            res = get(0,'ScreenSize');
            bgcolor = [.95 .95 .95];
            figpos = [max(1,0.5.*(res(3)-530)) max(50,0.5.*(res(4)-450)) 530 450];

            h_dlg = figure('Visible','off', ...
               'Color',bgcolor, ...
               'KeyPressFcn','figure(gcf)', ...
               'MenuBar','none', ...
               'Name','Split Data Series', ...
               'NumberTitle','off', ...
               'Position',figpos, ...
               'Tag','dlgSplitSeries', ...
               'ToolBar','none', ...
               'Resize','off', ...
               'DefaultuicontrolUnits','pixels');

            if mlversion >= 7
               set(h_dlg,'WindowStyle','normal')
               set(h_dlg,'DockControls','off')
            end

            uicontrol('Parent',h_dlg, ...
               'Style','frame', ...
               'ForegroundColor',[0 0 0], ...
               'BackgroundColor',bgcolor, ...
               'Position',[1 1 figpos(3) figpos(4)]);

            %create controls
            uicontrol('Parent',h_dlg, ...
               'BackgroundColor',bgcolor, ...
               'FontSize',10, ...
               'FontWeight','bold', ...
               'ForegroundColor',[0 0 0.7], ...
               'ListboxTop',0, ...
               'Position',[4 423 215 18], ...
               'String','Available Columns', ...
               'Style','text', ...
               'Tag','lblAvailable');

            uicontrol('Parent',h_dlg, ...
               'BackgroundColor',bgcolor, ...
               'FontSize',10, ...
               'FontWeight','bold', ...
               'ForegroundColor',[0 0 0.7], ...
               'ListboxTop',0, ...
               'Position',[250 423 260 18], ...
               'String','Column Selections', ...
               'Style','text', ...
               'Tag','lblSelections');

            uicontrol('Parent',h_dlg, ...
               'Style','frame', ...
               'BackgroundColor',[.9 .9 .9], ...
               'ForegroundColor',[0 0 0], ...
               'Position',[240 340 285 80]);

            uicontrol('Parent',h_dlg, ...
               'Style','frame', ...
               'BackgroundColor',[.9 .9 .9], ...
               'ForegroundColor',[0 0 0], ...
               'Position',[240 195 285 135]);

            uicontrol('Parent',h_dlg, ...
               'Style','frame', ...
               'BackgroundColor',[.9 .9 .9], ...
               'ForegroundColor',[0 0 0], ...
               'Position',[240 50 285 135]);

            uicontrol('Parent',h_dlg, ...
               'BackgroundColor',[.9 .9 .9], ...
               'FontSize',10, ...
               'FontWeight','bold', ...
               'ForegroundColor',[0 0 0.7], ...
               'Position',[250 384 260 18], ...
               'HorizontalAlignment','left', ...
               'String','Column for Splitting Data Series:', ...
               'Style','text', ...
               'Tag','lblSplitCol');

            h_popSplitCol = uicontrol('Parent',h_dlg, ...
               'Style','popupmenu', ...
               'BackgroundColor',[1 1 1], ...
               'ForegroundColor',[0 0 0], ...
               'FontSize',10, ...
               'Position',[290 360 225 18], ...
               'String',char([{'<select a column>'} ; splitlist]), ...
               'Value',1, ...
               'Callback','ui_splitseries(''splitcol'')', ...
               'Tag','popSplitCol', ...
               'UserData',0);

            uicontrol('Parent',h_dlg, ...
               'Style','text', ...
               'BackgroundColor',[.9 .9 .9], ...
               'FontSize',10, ...
               'FontWeight','bold', ...
               'ForegroundColor',[0 0 0.7], ...
               'ListboxTop',0, ...
               'Position',[290 305 215 18], ...
               'String','Join Series On', ...
               'Tag','lblJoin');

            uicontrol('Parent',h_dlg, ...
               'Style','text', ...
               'BackgroundColor',[.9 .9 .9], ...
               'FontSize',10, ...
               'FontWeight','bold', ...
               'ForegroundColor',[0 0 0.7], ...
               'ListboxTop',0, ...
               'Position',[290 160 215 18], ...
               'String','Generate Columns For', ...
               'Tag','lblAnalyze');

            h_listAvailable = uicontrol('Parent',h_dlg, ...
               'Style','listbox', ...
               'BackgroundColor',[1 1 1], ...
               'FontSize',10, ...
               'HorizontalAlignment','left', ...
               'Position',[6 50 225 370], ...
               'String',char(collist), ...
               'Min',1, ...
               'Max',10, ...
               'UserData',(1:length(s.name)), ...
               'Tag','listAvailable', ...
               'Value',1);

            h_listJoin = uicontrol('Parent',h_dlg, ...
               'Style','listbox', ...
               'BackgroundColor',[1 1 1], ...
               'FontSize',10, ...
               'HorizontalAlignment','left', ...
               'Position',[290 205 225 100], ...
               'String',' ', ...
               'Min',1, ...
               'Max',10, ...
               'UserData',[], ...
               'Tag','listJoin', ...
               'Value',1);

            h_listAnalyze = uicontrol('Parent',h_dlg, ...
               'Style','listbox', ...
               'BackgroundColor',[1 1 1], ...
               'FontSize',10, ...
               'HorizontalAlignment','left', ...
               'Position',[290 60 225 100], ...
               'String',' ', ...
               'Min',1, ...
               'Max',10, ...
               'UserData',[], ...
               'Tag','listAnalyze', ...
               'Value',1);

            h_cmdAddJoin = uicontrol('Parent',h_dlg, ...
               'Callback','ui_splitseries(''join_add'')', ...
               'FontSize',10, ...
               'FontWeight','bold', ...
               'Position',[249 260 30 22], ...
               'String','>', ...
               'ToolTipString','Add selected column to the ''Join By'' list', ...
               'Tag','cmdAddJoin');

            h_cmdRemJoin = uicontrol('Parent',h_dlg, ...
               'Enable','off', ...
               'Callback','ui_splitseries(''join_rem'')', ...
               'FontSize',10, ...
               'FontWeight','bold', ...
               'Position',[249 230 30 22], ...
               'String','<', ...
               'ToolTipString','Remove selected column from the ''Join By'' list', ...
               'Tag','cmdRemJoin');

            h_cmdAddVal = uicontrol('Parent',h_dlg, ...
               'Callback','ui_splitseries(''val_add'')', ...
               'FontSize',10, ...
               'FontWeight','bold', ...
               'Position',[249 115 30 22], ...
               'String','>', ...
               'ToolTipString','Add selected column to the ''Generate Columns For'' list', ...
               'Tag','cmdAddVal');

            h_cmdRemVal = uicontrol('Parent',h_dlg, ...
               'Enable','off', ...
               'Callback','ui_splitseries(''val_rem'')', ...
               'FontSize',10, ...
               'FontWeight','bold', ...
               'ListboxTop',0, ...
               'Position',[249 85 30 22], ...
               'String','<', ...
               'ToolTipString','Remove selected column from the ''Generate Columns For'' list', ...
               'Tag','cmdRemVal');

            h_cmdCancel = uicontrol('Parent',h_dlg, ...
               'Callback','ui_splitseries(''cancel'')', ...
               'FontSize',9, ...
               'Position',[15 10 60 25], ...
               'String','Cancel', ...
               'TooltipString','Cancel the operation and close the dialog window', ...
               'Tag','cmdCancel');

            h_chkClose = uicontrol('Parent',h_dlg, ...
               'Style','checkbox', ...
               'Position',[150 10 270 20], ...
               'BackgroundColor',bgcolor, ...
               'FontSize',10, ...
               'String','Close dialog after exporting the results', ...
               'Value',1, ...
               'Tag','chkClose');

            h_cmdEval = uicontrol('Parent',h_dlg, ...
               'Callback','ui_splitseries(''eval'')', ...
               'Enable','off', ...
               'FontSize',9, ...
               'ListboxTop',0, ...
               'Position',[460 10 60 25], ...
               'String','Proceed', ...
               'TooltipString','Split the data series and open the structure for editing', ...
               'Tag','cmdEval');

            uih = struct( ...
               'popSplitCol',h_popSplitCol, ...
               'listAvailable',h_listAvailable, ...
               'listJoin',h_listJoin, ...
               'listAnalyze',h_listAnalyze, ...
               'cmdAddJoin',h_cmdAddJoin, ...
               'cmdRemJoin',h_cmdRemJoin, ...
               'cmdAddVal',h_cmdAddVal, ...
               'cmdRemVal',h_cmdRemVal, ...
               'cmdEval',h_cmdEval, ...
               'cmdCancel',h_cmdCancel, ...
               'chkClose',h_chkClose, ...
               'h_cb',h_cb, ...
               'cb',cb, ...
               's',s, ...
               'I_validsplit',I_validsplit);

            set(h_dlg,'Visible','on','UserData',uih)
            drawnow

         else
            msgbox('init','This feature requires a data structure with string and/or integer columns for splitting series','','Error',[.9 .9 .9])
         end

      end

   end

else  %handle callbacks

   h_dlg = [];

   if length(findobj) > 2
      h_dlg = gcf;
      if ~strcmp(get(h_dlg,'Tag'),'dlgSplitSeries')
         h_dlg = [];
      end
   end

   if ~isempty(h_dlg)

      uih = get(h_dlg,'UserData');

      switch op

         case 'cancel'  %close dialog

            close(h_dlg)
            ui_aboutgce('reopen')  %check for last window

         case 'update'

            s = uih.s;

            if isstruct(s)

               splitcol = get(uih.popSplitCol,'Value') - 1;
               I_avail = get(uih.listAvailable,'UserData');
               I_join = get(uih.listJoin,'UserData');
               I_analyze = get(uih.listAnalyze,'UserData');

               vars = s.name;
               units = s.units;
               cols = length(s.name);
               varstr = cell(1,cols);

               for n = 1:cols
                  varstr{n} = [vars{n},'  (',units{n},')'];
               end

               if ~isempty(I_avail)
                  s_avail = varstr(I_avail);
               else
                  s_avail = {''};
               end

               if ~isempty(I_join)
                  s_join = varstr(I_join);
               else
                  s_join = {''};
               end

               if ~isempty(I_analyze)
                  s_analyze = varstr(I_analyze);
               else
                  s_analyze = {''};
               end

               set(uih.listAvailable, ...
                  'String',s_avail, ...
                  'Value',max(1,min(get(uih.listAvailable,'Value'),length(I_avail))))

               set(uih.listJoin, ...
                  'String',s_join, ...
                  'Value',max(1,min(get(uih.listJoin,'Value'),length(I_join))))

               set(uih.listAnalyze, ...
                  'String',s_analyze, ...
                  'Value',max(1,min(get(uih.listAnalyze,'Value'),length(I_analyze))))

               %toggle add/remove buttons according to list status
               if isempty(I_avail)
                  set(uih.cmdAddJoin,'Enable','off')
                  set(uih.cmdAddVal,'Enable','off')
               else
                  set(uih.cmdAddJoin,'Enable','on')
                  set(uih.cmdAddVal,'Enable','on')
               end

               if isempty(I_join)
                  set(uih.cmdRemJoin,'Enable','off')
               else
                  set(uih.cmdRemJoin,'Enable','on')
               end

               if isempty(I_analyze)
                  set(uih.cmdRemVal,'Enable','off')
               else
                  set(uih.cmdRemVal,'Enable','on')
               end

               spliterr = 0;
               I_validsplit = uih.I_validsplit;
               if splitcol > 0
                  if isempty(find(I_avail==I_validsplit(splitcol)))
                     splitcol = 0;
                     spliterr = 1;
                     set(uih.popSplitCol,'Value',1)
                  end
               end

               %toggle proceed button according to list status
               if splitcol > 0 && ~isempty(I_join) && ~isempty(I_analyze)
                  set(uih.cmdEval,'Enable','on')
               else
                  set(uih.cmdEval,'Enable','off')
               end

               drawnow

               if spliterr == 1
                  messagebox('init','Split column selection is no longer valid - menu reset', ...
                     '','Error',[.9 .9 .9])
               end

            end

         case 'eval'

            splitcol = get(uih.popSplitCol,'Value') - 1;
            I_join = get(uih.listJoin,'UserData');
            I_val = get(uih.listAnalyze,'UserData');
            I_validsplit = uih.I_validsplit;

            if splitcol > 0

               set(gcf,'Pointer','watch')
               drawnow

               [s2,msg] = split_dataseries(uih.s,I_validsplit(splitcol),I_join,I_val);

               set(gcf,'Pointer','arrow')
               drawnow

               if ~isempty(s2)

                  closeval = get(uih.chkClose,'Value');
                  if closeval == 1
                     close(h_dlg)
                     drawnow
                  end

                  %check for hooks to calling dialog
                  if isempty(uih.h_cb) && isempty(uih.cb)
                     ui_editor('init',s2);  %send results to editor
                  else
                     err = 0;
                     if ~isempty(uih.h_cb)
                        h_parent = parent_figure(uih.h_cb);
                        if ~isempty(h_parent)
                           set(uih.h_cb,'UserData',s2)
                        else
                           err = 1;
                        end
                     end
                     if err == 0 && ~isempty(uih.cb)
                        try
                           eval(uih.cb)
                        catch
                           err = 1;
                        end
                     end
                     if err == 1  %check for errors - open in new window
                        ui_editor('init',s2)
                        messagebox('init','Errors occurred returning data to the calling window', ...
                           '','Error',[.9 .9 .9])
                     end
                  end

               else

                  messagebox('init',char('Could not perform the analysis with the selected options', ...
                     ['(error: ',msg,')']), ...
                     '','Error',[.9 .9 .9]);

               end

            else

               messagebox('init','Split column selection invalid - operation cancelled', ...
                  '','Error',[.9 .9 .9])

            end

         case 'copysel'

            %get handles
            h_source = get(uih.cmdAddJoin,'UserData');
            h_target = get(uih.cmdRemJoin,'UserData');
            h_list = uih.listAvailable;

            if ~isempty(h_source) && ~isempty(h_target)

               %get indices
               I_target = get(h_target,'UserData');
               I_source = get(h_source,'UserData');
               val = get(h_source,'Value');
               I_sel = I_source(val);
               
               %update indices
               I_target = [I_target,I_sel];
               I_source = setdiff(I_source,I_sel);
               
               %store indices
               set(h_target,'UserData',I_target)
               set(h_source,'UserData',I_source)
               
               %resort master list if adding rows back to list
               if h_target == h_list
                  Ilist = get(h_list,'UserData');
                  Ilist = sort(Ilist);
                  Isel = find(Ilist==I_target(end));
                  set(h_list,'UserData',sort(Ilist),'Value',Isel)
               else
                  set(h_list,'Value',min([val(1),length(I_source)]))
                  set(h_target,'Value',length(I_target))
               end

               %update uicontrols
               ui_splitseries('update');

            end

         case 'join_add'

            %assign handles
            set(uih.cmdAddJoin,'UserData',uih.listAvailable);  %source
            set(uih.cmdRemJoin,'UserData',uih.listJoin);  %target

            %update listboxes
            ui_splitseries('copysel')

         case 'join_rem'

            %assign handles
            set(uih.cmdAddJoin,'UserData',uih.listJoin);  %source
            set(uih.cmdRemJoin,'UserData',uih.listAvailable);  %target

            %update listboxes
            ui_splitseries('copysel')

         case 'val_add'

            %assign handles
            set(uih.cmdAddJoin,'UserData',uih.listAvailable);  %source
            set(uih.cmdRemJoin,'UserData',uih.listAnalyze);  %target

            %update listboxes
            ui_splitseries('copysel')

         case 'val_rem'

            %assign handles
            set(uih.cmdAddJoin,'UserData',uih.listAnalyze);  %source
            set(uih.cmdRemJoin,'UserData',uih.listAvailable);  %target

            %update listboxes
            ui_splitseries('copysel')

         case 'splitcol'

            splitcol = get(uih.popSplitCol,'Value') - 1;
            get(uih.popSplitCol,'UserData');

            %check for value change
            if splitcol ~= get(uih.popSplitCol,'UserData')

               %check for valid selection
               if splitcol > 0

                  Iavail = get(uih.listAvailable,'UserData');
                  I_validsplit = uih.I_validsplit;

                  err = 0;
                  if ~isempty(Iavail)
                     if isempty(find(Iavail==I_validsplit(splitcol)))
                        err = 1;
                     end
                  else
                     err = 1;
                  end

                  if err == 1
                     set(uih.popSplitCol,'Value',get(uih.popSplitCol,'UserData')+1)
                     messagebox('init','Split column already selected for join or output - selection reset', ...
                        '','Error',[.9 .9 .9])
                  else
                     set(uih.popSplitCol,'UserData',splitcol)  %update cached value
                  end

               else
                  set(uih.popSplitCol,'UserData',0)
               end

            end

            ui_splitseries('update')  %refresh controls, toggle command button states

      end

   end

end
