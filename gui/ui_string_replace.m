function ui_string_replace(op,s,col,target,h_cb,cb)
%Dialog called by 'ui_editor' for searching and replace text values or flags in a GCE Data Structure
%
%syntax: ui_string_replace(op,s,col,target,h_cb,cb)
%
%input:
%  op = operation ('init' to initialize dialog)
%  s = data structure
%  col = column to update (default = [])
%  target = target for replacement ('data' or 'flags')
%  h_cb = object handle for storing return data
%  cb = callback to execute upon completion
%
%output:
%  none
%
%
%(c)2010-2011 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 19-Oct-2011

if strcmp(op,'init')
   
   if nargin >= 2 && gce_valid(s,'data')
      
      %check for prior instance and close
      if length(findobj) > 1
         h_dlg = findobj('tag','dlgStringReplace');
         if ~isempty(h_dlg)
            delete(h_dlg)
         end
      end
      
      if exist('target','var') ~= 1
         target = 'data';
      end
      
      if strcmp(target,'flags')
         Istr = find(~cellfun('isempty',s.flags));  %get index of columns with flags assigned
      else
         Istr = find(strcmp(s.datatype,'s'));  %get index of string columns
      end
      
      if ~isempty(Istr)
         
         if exist('col','var') ~= 1
            col = 0;
         elseif ~isnumeric(col)
            col = name2col(s,col);
         end
         
         if isempty(col)
            colval = 0;
         else
            Ival = find(Istr == col);
            if ~isempty(Ival)
               colval = Ival;
            else
               colval = 0;
            end
         end
         
         if exist('h_cb','var') ~= 1
            h_cb = [];
         end
         
         if exist('cb','var') ~= 1
            cb = '';
         end
         
         bgcolor = [.95 .95 .95];
         res = get(0,'ScreenSize');
         
         if strcmp(target,'data')
            voffset = 30;
            dlgtitle = 'Search/Replace String';
            lbl_oldtext = 'Old Text';
            lbl_newtext = 'New Text';
            fullmatchval = 1;
            partialmatchval = 0;
         else
            voffset = 0;
            dlgtitle = 'Search/Replace Flags';
            lbl_oldtext = 'Old Flag';
            lbl_newtext = 'New Flag';
            fullmatchval = 0;
            partialmatchval = 1;
         end
         
         h_dlg = figure('Units','pixels', ...
            'Position',[max(0,0.5.*(res(3)-600)) max(50,0.5.*(res(4)-170)) 650 130+voffset], ...
            'Visible','off', ...
            'Color',bgcolor, ...
            'KeyPressFcn','figure(gcf)', ...
            'MenuBar','none', ...
            'Name',dlgtitle, ...
            'NumberTitle','off', ...
            'DefaultUIControlUnits','pixels', ...
            'Resize','off', ...
            'CloseRequestFcn','ui_string_replace(''cancel'')', ...
            'Tag','dlgStringReplace');
         
         if mlversion >= 7
            set(h_dlg,'WindowStyle','normal')
            set(h_dlg,'DockControls','off')
         end
         
         uicontrol('parent',h_dlg, ...
            'Style','text', ...
            'Position',[15 95+voffset 60 18], ...
            'String','Column', ...
            'Fontweight','bold', ...
            'FontSize',10, ...
            'HorizontalAlignment','left', ...
            'BackgroundColor',bgcolor, ...
            'Tag','lblColumn');
         
         h_popColumn = uicontrol('parent',h_dlg, ...
            'Style','popupmenu', ...
            'Position',[80 97+voffset 220 18], ...
            'String',[{'<select column>'} ; s.name(Istr)'], ...
            'Value',colval+1, ...
            'BackgroundColor',[1 1 1], ...
            'FontSize',9, ...
            'Tag','popColumn', ...
            'Callback','ui_string_replace(''buttons'')', ...
            'UserData',Istr);
         
         uicontrol('parent',h_dlg, ...
            'Style','text', ...
            'Position',[305 95+voffset 65 18], ...
            'Fontweight','bold', ...
            'FontSize',10, ...
            'BackgroundColor',bgcolor, ...
            'String',lbl_oldtext, ...
            'Tag','lblOldText');
         
         h_editOldText = uicontrol('parent',h_dlg, ...
            'Style','edit', ...
            'Position',[372 95+voffset 90 20], ...
            'FontSize',9, ...
            'BackgroundColor',[1 1 1], ...
            'HorizontalAlignment','left', ...
            'String','', ...
            'Callback','ui_string_replace(''buttons'')', ...
            'Tag','lblOldText');
         
         uicontrol('parent',h_dlg, ...
            'Style','text', ...
            'Position',[475 95+voffset 65 18], ...
            'Fontweight','bold', ...
            'FontSize',10, ...
            'BackgroundColor',bgcolor, ...
            'String',lbl_newtext, ...
            'Tag','lblNewText');
         
         h_editNewText = uicontrol('parent',h_dlg, ...
            'Style','edit', ...
            'Position',[542 95+voffset 90 20], ...
            'FontSize',9, ...
            'BackgroundColor',[1 1 1], ...
            'HorizontalAlignment','left', ...
            'String','', ...
            'Callback','ui_string_replace(''buttons'')', ...
            'Tag','lblNewText');
         
         uicontrol('parent',h_dlg, ...
            'Style','text', ...
            'Position',[15 60+voffset 130 18], ...
            'Fontweight','bold', ...
            'FontSize',10, ...
            'HorizontalAlignment','left', ...
            'BackgroundColor',bgcolor, ...
            'String','Match Type Option', ...
            'Tag','lblOptions');
         
         h_radioMatchFull = uicontrol('parent',h_dlg, ...
            'Style','radio', ...
            'Position',[150 60+voffset 50 18], ...
            'String','Full', ...
            'Fontsize',10, ...
            'BackgroundColor',bgcolor, ...
            'Value',fullmatchval, ...
            'Callback','ui_string_replace(''match'')', ...
            'Tag','radioMatchFull');
         
         h_radioMatchPartial = uicontrol('parent',h_dlg, ...
            'Style','radio', ...
            'Position',[205 60+voffset 110 18], ...
            'String','Partial (regex)', ...
            'Fontsize',10, ...
            'BackgroundColor',bgcolor, ...
            'Value',partialmatchval, ...
            'Callback','ui_string_replace(''match'')', ...
            'Tag','radioMatchPartial');
         
         uicontrol('parent',h_dlg, ...
            'Style','text', ...
            'Position',[330 60+voffset 120 18], ...
            'Fontweight','bold', ...
            'FontSize',10, ...
            'BackgroundColor',bgcolor, ...
            'String','Text Case Option', ...
            'Tag','lblOptions');
         
         h_radioCaseSensitive = uicontrol('parent',h_dlg, ...
            'Style','radio', ...
            'Position',[460 60+voffset 80 18], ...
            'String','Sensitive', ...
            'Fontsize',10, ...
            'BackgroundColor',bgcolor, ...
            'Value',1, ...
            'Callback','ui_string_replace(''case'')', ...
            'Tag','radioCaseSensitive');
         
         h_radioCaseInsensitive = uicontrol('parent',h_dlg, ...
            'Style','radio', ...
            'Position',[540 60+voffset 80 18], ...
            'String','Insensitive', ...
            'Fontsize',10, ...
            'BackgroundColor',bgcolor, ...
            'Value',0, ...
            'Callback','ui_string_replace(''case'')', ...
            'Tag','radioCaseSensitive');
         
         %add flag controls if target = data
         if strcmp(target,'data')
         
            uicontrol('parent',h_dlg, ...
               'Style','text', ...
               'Position',[15 55 135 18], ...
               'Fontweight','bold', ...
               'FontSize',10, ...
               'HorizontalAlignment','left', ...
               'BackgroundColor',bgcolor, ...
               'String','Q/C Flag to Assign', ...
               'Tag','lblFlagCode');
            
            %call function to add standard Q/C flag picking controls and get ui handle
            ui_flagpicker('add',s,[150 53],h_dlg,'');
            h_popFlagChoice = findobj(h_dlg,'Tag','popFlagChoice');
            
            uicontrol('parent',h_dlg, ...
               'Style','text', ...
               'Position',[440 55 100 18], ...
               'Fontweight','bold', ...
               'FontSize',10, ...
               'BackgroundColor',bgcolor, ...
               'String','Log Changes', ...
               'Tag','lblNewValue');
            
            h_editLogOption = uicontrol('parent',h_dlg, ...
               'Style','edit', ...
               'Position',[542 55 90 20], ...
               'FontSize',9, ...
               'BackgroundColor',[1 1 1], ...
               'HorizontalAlignment','left', ...
               'String','100', ...
               'Tag','lblNewValue');
            
         else
            h_popFlagChoice = [];
            h_editLogOption = [];
         end
         
         h_cmdCancel = uicontrol('parent',h_dlg, ...
            'Style','pushbutton', ...
            'Position',[10 10 60 25], ...
            'String','Cancel', ...
            'Callback','ui_string_replace(''cancel'')', ...
            'Tag','cmdCancel');
         
         h_cmdEval = uicontrol('parent',h_dlg, ...
            'Style','pushbutton', ...
            'Position',[580 10 60 25], ...
            'String','Accept', ...
            'Enable','off', ...
            'Callback','ui_string_replace(''eval'')', ...
            'Tag','cmdEval');
         
         %generate structure to cache handles and input data
         uih = struct('popColumn',h_popColumn, ...
            'editOldText',h_editOldText, ...
            'editNewText',h_editNewText, ...
            'editLogOption',h_editLogOption, ...
            'radioMatchFull',h_radioMatchFull, ...
            'radioMatchPartial',h_radioMatchPartial, ...
            'radioCaseSensitive',h_radioCaseSensitive, ...
            'radioCaseInsensitive',h_radioCaseInsensitive, ...
            'popFlagChoice',h_popFlagChoice, ...
            'cmdCancel',h_cmdCancel, ...
            'cmdEval',h_cmdEval, ...
            's',s, ...
            'Istr',[], ...
            'h_cb',h_cb, ...
            'cb',cb, ...
            'target',target);
         uih.Istr = Istr;
         
         set(h_dlg,'Visible','on','UserData',uih)
         drawnow
         
      else
         if strcmp(target,'flags')
            msg = 'No flags are currently assigned to any data values';
         else
            msg = 'No text columns are present in the data set';
         end
         messagebox('init',msg,'','Error',[.95 .95 .95]);
      end
      
   end
   
else  %handle other callbacks
   
   h_dlg = gcf;
   
   if strcmp(get(h_dlg,'Tag'),'dlgStringReplace')
      
      uih = get(h_dlg,'UserData');
      
      switch op
         
         case 'cancel'
            
            if ~isempty(h_dlg)
               delete(h_dlg)
               drawnow
            end
            
            ui_aboutgce('reopen')  %check for last window
            
         case 'buttons'  %check for valid input, enable/disable accept button
            
            col = get(uih.popColumn,'Value');
            oldtext = deblank(get(uih.editOldText,'String'));
            
            if col > 1 && ~isempty(oldtext)
               set(uih.cmdEval,'Enable','on')
            else
               set(uih.cmdEval,'Enable','off')
            end
            
         case 'match'  %handle match option radio selections
            
            h_sel = gcbo;
            h_radio = [uih.radioMatchFull,uih.radioMatchPartial];
            
            set(h_radio,'Value',0)
            set(h_sel,'Value',1)
            
            drawnow
            
         case 'case'  %handle case option radio selections
            
            h_sel = gcbo;
            h_radio = [uih.radioCaseSensitive,uih.radioCaseInsensitive];
            
            set(h_radio,'Value',0)
            set(h_sel,'Value',1)
            
            drawnow
            
         case 'eval'
            
            %get column selection
            colval = get(uih.popColumn,'Value');
            colindex = uih.Istr;
            col = colindex(colval-1);
            
            %get match option
            matchfull = get(uih.radioMatchFull,'Value');
            if matchfull == 1
               matchoption = 'full';
            else
               matchoption = 'partial';
            end
            
            %get case option
            casesensitive = get(uih.radioCaseSensitive,'Value');
            if casesensitive == 1
               caseoption = 'sensitive';
            else
               caseoption = 'insensitive';
            end
            
            %get extra fields for target = data
            if strcmp(uih.target,'data')
            
               %get logging option
               logoption = str2double(get(uih.editLogOption,'String'));
               if isnan(logoption)
                  logoption = 0;
               end
               
               %get q/c flag option
               Iflag = get(uih.popFlagChoice,'Value');
               flagcodes = get(uih.popFlagChoice,'Userdata');
               flag = flagcodes{Iflag};
               flagmeta = '';
               
               %generate updated flag metadata in case user has updated the definitions in the dialog
               if ~isempty(flag)
                  defs = cellstr(get(uih.popFlagChoice,'String'));  %convert list to cell array
                  flagdefs = cell2commas(strrep(defs(2:end),'--','='));  %generate flag def metadata, skipping no flag option
                  if ~isempty(flagdefs)
                     flagmeta = [{'Data'},{'Codes'},{flagdefs}];  %format flag codes as metadata field for dialog
                  end
               end
               
            else
               logoption = 0;
               flag = '';
            end
            
            %get strings
            oldstr = get(uih.editOldText,'String');
            newstr = get(uih.editNewText,'String');
            
            %call replacement function based on target
            if strcmp(uih.target,'flags')
               [s2,msg] = flag_replace(uih.s,col,oldstr,newstr,matchoption,caseoption);
            else            
               [s2,msg] = string_replace(uih.s,col,oldstr,newstr,matchoption,caseoption,flag,logoption);
            end
            
            if ~isempty(s2)
               
               %update flag definitions in metadata
               if ~isempty(flag) && ~isempty(flagmeta)
                  s2 = addmeta(s2,flagmeta,0,'ui_num_replace');
               end
               
               delete(h_dlg)
               
               h_fig = parent_figure(uih.h_cb);
               
               if ~isempty(h_fig)
                  figure(h_fig)
                  drawnow
                  set(uih.h_cb,'UserData',s2)
                  try
                     eval(uih.cb)
                  catch
                     messagebox('init','An error occurred returning the updated data structure to the calling editor', ...
                        [],[],'Error',[.95 .95 .95])
                  end
               else
                  ui_editor('init',s2);
               end
               
            else
               messagebox('init',['An error occurred: ',msg],[],[],'Error',[.95 .95 .95])
            end
            
      end
      
   end
   
end
