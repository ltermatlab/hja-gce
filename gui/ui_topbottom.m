function ui_topbottom(op,s)
%GCE Data Toolbox dialog for extracting top and bottom data records from a vertical profile data set
%based on values in a depth or pressure column.
%
%syntax: ui_topbottom(op,s)
%
%input:
%  op = operation ('init' to initialize dialog)
%  s = data structure
%
%output:
%  none
%
%
%(c)2002-2009 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 23-Jan-2009

if nargin == 0
   op = 'init';
elseif isstruct(op)
   s = op;
   op = 'init';
end

if exist('s','var') ~= 1
   s = [];
end

if strcmp(op,'init')  %build gui

   if gce_valid(s,'data')

      res = get(0,'ScreenSize');
      bgcolor = [.95 .95 .95];
      figpos = [max(1,0.5.*(res(3)-530)) max(50,0.5.*(res(4)-460)) 530 460];

      h_dlg = figure('Visible','off', ...
         'Color',bgcolor, ...
         'KeyPressFcn','figure(gcf)', ...
         'MenuBar','none', ...
         'Name','Top/Bottom Values', ...
         'NumberTitle','off', ...
         'Position',figpos, ...
         'Tag','dlgTopBottom', ...
         'ToolBar','none', ...
         'Resize','off', ...
         'DefaultuicontrolUnits','pixels');

      if mlversion >= 7
         set(h_dlg,'WindowStyle','normal')
         set(h_dlg,'DockControls','off')
      end

      h = uicontrol('Parent',h_dlg, ...
         'Style','frame', ...
         'ForegroundColor',[0 0 0], ...
         'BackgroundColor',bgcolor, ...
         'Position',[1 1 figpos(3) figpos(4)]);

      %create controls
      h = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',bgcolor, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.7], ...
         'ListboxTop',0, ...
         'Position',[4 430 215 18], ...
         'String','Available Columns', ...
         'Style','text', ...
         'Tag','lblAvailable');

      h = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',bgcolor, ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.7], ...
         'ListboxTop',0, ...
         'Position',[250 430 260 18], ...
         'String','Column Selections', ...
         'Style','text', ...
         'Tag','lblSelections');

      h = uicontrol('Parent',h_dlg, ...
         'Style','frame', ...
         'BackgroundColor',[.9 .9 .9], ...
         'ForegroundColor',[0 0 0], ...
         'Position',[240 360 285 67]);

      h = uicontrol('Parent',h_dlg, ...
         'Style','frame', ...
         'BackgroundColor',[.9 .9 .9], ...
         'ForegroundColor',[0 0 0], ...
         'Position',[240 215 285 135]);

      h = uicontrol('Parent',h_dlg, ...
         'Style','frame', ...
         'BackgroundColor',[.9 .9 .9], ...
         'ForegroundColor',[0 0 0], ...
         'Position',[240 50 285 155]);

      h = uicontrol('Parent',h_dlg, ...
         'BackgroundColor',[.9 .9 .9], ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.7], ...
         'Position',[245 399 275 18], ...
         'String','Depth/Pressure Column', ...
         'Style','text', ...
         'Tag','lblDepCol');

      collist = concatcellcols([s.name',repmat({'  ('},length(s.name),1), ...
            s.units',repmat({')'},length(s.name),1)]);

      I = find((strncmp(lower(s.name),'depth',5) | strncmp(lower(s.name),'press',4)) & ...
         ~strcmp(s.datatype,'s'));
      if ~isempty(I)
         depcol = I(1);
      else
         depcol = 0;
      end

      h_popDepCol = uicontrol('Parent',h_dlg, ...
         'Style','popupmenu', ...
         'BackgroundColor',[1 1 1], ...
         'ForegroundColor',[0 0 0], ...
         'FontSize',10, ...
         'Position',[265 375 238 18], ...
         'String',char([{'<select a column>'} ; ...
            collist]), ..., ...
         'Value',depcol+1, ...
         'UserData',0, ...
         'Callback','ui_topbottom(''depcol'')', ...
         'Tag','popDepCol');

      h = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'BackgroundColor',[.9 .9 .9], ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.7], ...
         'ListboxTop',0, ...
         'Position',[290 325 215 18], ...
         'String','Group Records By', ...
         'Tag','lblAggregate');

      h = uicontrol('Parent',h_dlg, ...
         'Style','text', ...
         'BackgroundColor',[.9 .9 .9], ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ForegroundColor',[0 0 0.7], ...
         'ListboxTop',0, ...
         'Position',[290 180 215 18], ...
         'String','Calculate Statistics For', ...
         'Tag','lblAnalyze');

      h_listAvailable = uicontrol('Parent',h_dlg, ...
         'Style','listbox', ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',10, ...
         'HorizontalAlignment','left', ...
         'Position',[6 50 225 380], ...
         'String',char(collist), ...
         'UserData',[1:length(s.name)], ...
         'Tag','listAvailable', ...
         'Value',1);

      h_listAggregate = uicontrol('Parent',h_dlg, ...
         'Style','listbox', ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',10, ...
         'HorizontalAlignment','left', ...
         'Position',[290 225 225 100], ...
         'String',' ', ...
         'UserData',[], ...
         'Tag','listAggregate', ...
         'Value',1);

      h_listAnalyze = uicontrol('Parent',h_dlg, ...
         'Style','listbox', ...
         'BackgroundColor',[1 1 1], ...
         'FontSize',10, ...
         'HorizontalAlignment','left', ...
         'Position',[290 80 225 100], ...
         'String',' ', ...
         'UserData',[], ...
         'Tag','listAnalyze', ...
         'Value',1);

      h_cmdAddAggr = uicontrol('Parent',h_dlg, ...
         'Callback','ui_topbottom(''aggr_add'')', ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'Position',[249 280 30 22], ...
         'String','>', ...
         'ToolTipString','Add selected column to the ''Aggregate By'' list', ...
         'Tag','cmdAddAggr');

      h_cmdRemAggr = uicontrol('Parent',h_dlg, ...
         'Enable','off', ...
         'Callback','ui_topbottom(''aggr_rem'')', ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'Position',[249 250 30 22], ...
         'String','<', ...
         'ToolTipString','Remove selected column from the ''Aggregate By'' list', ...
         'Tag','cmdRemAggr');

      h_cmdAddStat = uicontrol('Parent',h_dlg, ...
         'Callback','ui_topbottom(''stat_add'')', ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'Position',[249 135 30 22], ...
         'String','>', ...
         'ToolTipString','Add selected column to the ''Calculate Statistics For'' list', ...
         'Tag','cmdAddStat');

      h_cmdRemStat = uicontrol('Parent',h_dlg, ...
         'Enable','off', ...
         'Callback','ui_topbottom(''stat_rem'')', ...
         'FontSize',10, ...
         'FontWeight','bold', ...
         'ListboxTop',0, ...
         'Position',[249 105 30 22], ...
         'String','<', ...
         'ToolTipString','Remove selected column from the ''Calculate Statistics For'' list', ...
         'Tag','cmdRemStat');

      h_chkFlags = uicontrol('Parent',h_dlg, ...
         'Position',[315 55 200 20], ...
         'Style','checkbox', ...
         'FontSize',10, ...
         'BackgroundColor',[.9 .9 .9], ...
         'String','Exclude Flagged Values', ...
         'Value',0, ...
         'Tag','chkFlags');

      h_cmdCancel = uicontrol('Parent',h_dlg, ...
         'Callback','ui_topbottom(''cancel'')', ...
         'FontSize',9, ...
         'Position',[15 10 60 25], ...
         'String','Cancel', ...
         'TooltipString','Cancel the operation and close the dialog window', ...
         'Tag','cmdCancel');

      h_chkClose = uicontrol('Parent',h_dlg, ...
         'Style','checkbox', ...
         'Position',[150 10 270 20], ...
         'BackgroundColor',bgcolor, ...
         'FontSize',10, ...
         'String','Close dialog after exporting the results', ...
         'Value',1, ...
         'Tag','chkClose');

      h_cmdEval = uicontrol('Parent',h_dlg, ...
         'Callback','ui_topbottom(''eval'')', ...
         'Enable','off', ...
         'FontSize',9, ...
         'ListboxTop',0, ...
         'Position',[460 10 60 25], ...
         'String','Proceed', ...
         'TooltipString','Perform the aggregated statistics and open the structure for editing', ...
         'Tag','cmdEval', ...
         'UserData',s);

      uih = struct( ...
         'popDepCol',h_popDepCol, ...
         'listAvailable',h_listAvailable, ...
         'listAggregate',h_listAggregate, ...
         'listAnalyze',h_listAnalyze, ...
         'cmdAddAggr',h_cmdAddAggr, ...
         'cmdRemAggr',h_cmdRemAggr, ...
         'cmdAddStat',h_cmdAddStat, ...
         'cmdRemStat',h_cmdRemStat, ...
         'chkFlags',h_chkFlags, ...
         'cmdEval',h_cmdEval, ...
         'cmdCancel',h_cmdCancel, ...
         'chkClose',h_chkClose);

      set(h_dlg,'Visible','on','UserData',uih)
      drawnow

   end

else  %handle callbacks

   h_dlg = [];

   if length(findobj) > 2
      h_dlg = gcf;
      if ~strcmp(get(h_dlg,'Tag'),'dlgTopBottom')
         h_dlg = [];
      end
   end

   if ~isempty(h_dlg)

      uih = get(h_dlg,'UserData');

      switch op

      case 'cancel'  %close dialog

         close(h_dlg)
         ui_aboutgce('reopen')  %check for last window

      case 'update'

         s = get(uih.cmdEval,'UserData');

         if isstruct(s)

            depcol = get(uih.popDepCol,'Value') - 1;
            I_avail = get(uih.listAvailable,'UserData');
            I_aggr = get(uih.listAggregate,'UserData');
            I_analyze = get(uih.listAnalyze,'UserData');

            vars = s.name;
            units = s.units;
            cols = length(s.name);
            varstr = cell(1,cols);

            for n = 1:cols
               varstr{n} = [vars{n},'  (',units{n},')'];
            end

            if ~isempty(I_avail)
               s_avail = varstr(I_avail);
            else
               s_avail = {''};
            end

            if ~isempty(I_aggr)
               s_aggr = varstr(I_aggr);
            else
               s_aggr = {''};
            end

            if ~isempty(I_analyze)
               s_analyze = varstr(I_analyze);
            else
               s_analyze = {''};
            end

            set(uih.listAvailable, ...
               'String',s_avail, ...
               'Value',max(1,min(get(uih.listAvailable,'Value'),length(I_avail))))

            set(uih.listAggregate, ...
               'String',s_aggr, ...
               'Value',max(1,min(get(uih.listAggregate,'Value'),length(I_aggr))))

            set(uih.listAnalyze, ...
               'String',s_analyze, ...
               'Value',max(1,min(get(uih.listAnalyze,'Value'),length(I_analyze))))

            %toggle add/remove buttons according to list status
            if isempty(I_avail)
               set(uih.cmdAddAggr,'Enable','off')
               set(uih.cmdAddStat,'Enable','off')
            else
               set(uih.cmdAddAggr,'Enable','on')
               set(uih.cmdAddStat,'Enable','on')
            end

            if isempty(I_aggr)
               set(uih.cmdRemAggr,'Enable','off')
            else
               set(uih.cmdRemAggr,'Enable','on')
            end

            if isempty(I_analyze)
               set(uih.cmdRemStat,'Enable','off')
            else
               set(uih.cmdRemStat,'Enable','on')
            end

            binerr = 0;
            if depcol > 0
   	         if isempty(find(I_avail==depcol))
      	         depcol = 0;
         	      binerr = 1;
            	   set(uih.popDepCol,'Value',1,'UserData',0)
               end
            end

            %toggle proceed button according to list status
            if depcol > 0 & ~isempty(I_analyze)
               set(uih.cmdEval,'Enable','on')
            else
               set(uih.cmdEval,'Enable','off')
            end

            drawnow

            if binerr == 1
               messagebox('init','Bin column selection is no longer valid - menu reset', ...
                  '','Error',[.9 .9 .9])
            end

         end

      case 'eval'

         s = get(uih.cmdEval,'UserData');

         depcol = get(uih.popDepCol,'Value') - 1;
         I_aggr = get(uih.listAggregate,'UserData');
         I_stat = get(uih.listAnalyze,'UserData');
         flagopt = get(uih.chkFlags,'Value');

         set(gcf,'Pointer','watch')
         drawnow

         if depcol > 1 & ~isempty(I_stat)

            try

               if flagopt == 1
                  s = nullflags(s);
               end

               s2 = aggr_topbottom(s,depcol,I_aggr,I_stat);

               set(gcf,'Pointer','arrow')
               drawnow

               if ~isempty(s2)

                  closeval = get(uih.chkClose,'Value');
                  if closeval == 1
                     close(h_dlg)
                     drawnow
                  end

                  ui_editor('init',s2);  %send results to editor

               else

                  messagebox('init','Could not perform the analysis using the selected columns', ...
                     '','Error',[.9 .9 .9]);

               end

            catch

               set(gcf,'Pointer','arrow')
               drawnow

               messagebox('init','Column selections are invalid', ...
                  '','Error',[.9 .9 .9]);

            end

         else

            messagebox('init','Bin column or bin limits invalid - operation cancelled', ...
               '','Error',[.9 .9 .9])

         end

      case 'copysel'

         %get handles
         h_source = get(uih.cmdAddAggr,'UserData');
         h_target = get(uih.cmdRemAggr,'UserData');
         h_list = uih.listAvailable;

         if ~isempty(h_source) & ~isempty(h_target)

            %get indices
            I_target = get(h_target,'UserData');
            I_source = get(h_source,'UserData');
            I_sel = I_source(get(h_source,'Value'));

            %update indices
            I_target = [I_target,I_sel];
            I_source = I_source(find(I_source~=I_sel));

            %store indices
            set(h_target,'UserData',I_target)
            set(h_source,'UserData',I_source)

            %resort master list if adding rows back to list
            if h_target == h_list
               Ilist = get(h_list,'UserData');
               [Ilist,I] = sort(Ilist);
               Isel = find(Ilist==I_target(end));
               set(h_list,'UserData',sort(Ilist),'Value',Isel)
            end

            %update uicontrols
            ui_topbottom('update');

         end

      case 'aggr_add'

         %assign handles
         set(uih.cmdAddAggr,'UserData',uih.listAvailable);  %source
         set(uih.cmdRemAggr,'UserData',uih.listAggregate);  %target

         %update listboxes
         ui_topbottom('copysel')

      case 'aggr_rem'

         %assign handles
         set(uih.cmdAddAggr,'UserData',uih.listAggregate);  %source
         set(uih.cmdRemAggr,'UserData',uih.listAvailable);  %target

         %update listboxes
         ui_topbottom('copysel')

      case 'stat_add'

         %assign handles
         set(uih.cmdAddAggr,'UserData',uih.listAvailable);  %source
         set(uih.cmdRemAggr,'UserData',uih.listAnalyze);  %target

         %update listboxes
         ui_topbottom('copysel')

      case 'stat_rem'

         %assign handles
         set(uih.cmdAddAggr,'UserData',uih.listAnalyze);  %source
         set(uih.cmdRemAggr,'UserData',uih.listAvailable);  %target

         %update listboxes
         ui_topbottom('copysel')

      case 'depcol'

         depcol = get(uih.popDepCol,'Value') - 1;

         if depcol ~= get(uih.popDepCol,'UserData')

            if depcol > 0

               s = get(uih.cmdEval,'UserData');

               if ~strcmp(s.datatype{depcol},'s')

                  Iavail = get(uih.listAvailable,'UserData');

                  err = 0;
                  if ~isempty(Iavail)
                     if isempty(find(Iavail==depcol))
                        err = 1;
                     end
                  else
                     err = 1;
                  end

                  if err == 1
                     depcol = 0;
                     set(uih.popDepCol,'Value',depcol+1)
                     set(uih.cmdEval,'Enable','off')
                     messagebox('init','Invalid bin selection column - menu reset', ...
                        '','Error',[.9 .9 .9])
                  end

                  set(uih.popDepCol,'UserData',depcol)  %update last value cache

               else

                  set(uih.popDepCol,'Value',1,'UserData',0)
                  drawnow
                  messagebox('init','Bin column must be numerical - menu reset', ...
                     '','Error',[.9 .9 .9])

               end

            end

            ui_topbottom('update')

         end

      end

   end

end
