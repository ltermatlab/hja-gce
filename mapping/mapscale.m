function mapscale(op,initvals)
%Map scale dialog box function
%
%syntax:  mapscale(op,initvals)
%
%
%(c)2002,2003,2004 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 06-Jul-2004

if nargin == 0
   op = 'init';
end

if strcmp(op,'init')  %build dialog box

   h_fig = gcf;

   if exist('initvals') ~= 1
      h_mapscale = findobj(h_fig,'tag','mapscale');
      if ~isempty(h_mapscale)
         initvals = get(h_mapscale,'userdata');
      else
         initvals = [];
      end
   else
      initvals = [];
   end

   if isempty(initvals)
      initvals = [3 1 .5 9];
   elseif length(initvals < 4)
      newvals = [3 1 .5 9];
      initvals = [initvals newvals(length(initvals)+1:4)];
   elseif length(initvals > 4)
      initvals = initvals(1:4);
   end

   clr = [];
   h_dbar = findobj(gca,'Tag','distbar');
   if ~isempty(h_dbar)
      for n = 1:length(h_dbar)
         if strcmp(get(h_dbar(n),'type'),'text')
            clr = get(h_dbar(n),'Color');
            break
         end
      end
   end
   if isempty(clr)
      clr = [0 0 0];
   end

   %set screen resolution constant (maximum 800x600)
   res = get(0,'screensize');

   h_dlg = figure('Visible','off', ...
      'Units','pixels', ...
      'Position',[max(10,(res(3)-220).*0.5) max(30,(res(4)-200).*0.5) 220 200], ...
      'Name','Map Scale Bar', ...
      'Color',[.95 .95 .95], ...
      'Menubar','none', ...
      'Toolbar','none', ...
      'Resize','off', ...
      'NumberTitle','off', ...
      'keypressfcn','figure(gcf)', ...
      'DefaultUiControlUnits','pixels', ...
      'Tag','dlgMapScale');

   uicontrol(h_dlg, ...
      'Style','text', ...
      'FontSize',9, ...
      'FontWeight','bold', ...
      'Position',[15 170 130 18], ...
      'BackgroundColor',[.95 .95 .95], ...
      'ForegroundColor',[0 0 0.8], ...
      'String','Scale Length (km)', ...
      'HorizontalAlignment','left');

   h_length = uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[160 170 40 18], ...
      'BackgroundColor',[1 1 1], ...
      'ForegroundColor',[0 0 0], ...
      'String',num2str(initvals(1)), ...
      'Tag','length');

   uicontrol(h_dlg, ...
      'Style','text', ...
      'FontSize',9, ...
      'FontWeight','bold', ...
      'Position',[15 143 130 18], ...
      'BackgroundColor',[.95 .95 .95], ...
      'ForegroundColor',[0 0 0.8], ...
      'String','Scale Interval (km)', ...
      'HorizontalAlignment','left');

   h_interval = uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[160 143 40 18], ...
      'BackgroundColor',[1 1 1], ...
      'ForegroundColor',[0 0 0], ...
      'String',num2str(initvals(2)), ...
      'Tag','scale2');

   uicontrol(h_dlg, ...
      'Style','text', ...
      'FontSize',9, ...
      'FontWeight','bold', ...
      'Position',[15 116 130 18], ...
      'BackgroundColor',[.95 .95 .95], ...
      'ForegroundColor',[0 0 .8], ...
      'String','Scale Height (km)', ...
      'HorizontalAlignment','left');

   h_height = uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[160 116 40 18], ...
      'BackgroundColor',[1 1 1], ...
      'ForegroundColor',[0 0 0], ...
      'String',num2str(initvals(3)), ...
      'Tag','scale3');

   uicontrol(h_dlg, ...
      'Style','text', ...
      'FontSize',9, ...
      'FontWeight','bold', ...
      'Position',[15 89 130 18], ...
      'BackgroundColor',[.95 .95 .95], ...
      'ForegroundColor',[0 0 .8], ...
      'String','Font Size (pts)', ...
      'HorizontalAlignment','left');

   h_font = uicontrol(h_dlg, ...
      'Style','edit', ...
      'Position',[160 89 40 18], ...
      'BackgroundColor',[1 1 1], ...
      'ForegroundColor',[0 0 0], ...
      'String',num2str(initvals(4)), ...
      'Tag','scale4');

   h_clr = uicontrol(h_dlg, ...
      'Style','frame', ...
      'FontSize',12, ...
      'FontWeight','bold', ...
      'Position',[140 40 60 25], ...
      'BackgroundColor',clr, ...
      'ForegroundColor',clr, ...
      'Tag','color');

   uicontrol(h_dlg, ...
      'Style','pushbutton', ...
      'Position',[30 40 100 25], ...
      'String','Set Scale Color', ...
      'Callback','uisetcolor(findobj(gcf,''tag'',''color'')); set(findobj(gcf,''tag'',''color''),''backgroundcolor'',get(findobj(gcf,''tag'',''color''),''foregroundcolor''))');

   uicontrol(h_dlg, ...
      'Style','pushbutton', ...
      'Position',[1 1 70 25], ...
      'String','Cancel', ...
      'Callback','mapscale(''cancel'')', ...
      'Tag','cancel');

   uicontrol(h_dlg, ...
      'Style','pushbutton', ...
      'Position',[120 1 100 25], ...
      'String','Place Scale', ...
      'Callback','mapscale(''eval'')', ...
      'Tag','place');

   uih = struct('h_fig',h_fig, ...
      'h_mapscale',h_mapscale, ...
      'h_length',h_length, ...
      'h_interval',h_interval, ...
      'h_height',h_height, ...
      'h_font',h_font, ...
      'h_clr',h_clr, ...
      'initvals',[]);
   uih.initvals = initvals;

   set(h_dlg,'userdata',uih,'visible','on')
   drawnow

elseif strcmp(op,'remove')  %remove mapscale from existing figure

   h_dbar = findobj(gca,'Tag','distbar');
   if ~isempty(h_dbar)
      delete(h_dbar)
   end

else

   h_dlg = findobj('Tag','dlgMapScale');

   if ~isempty(h_dlg)

      uih = get(h_dlg(1),'userdata');

      if strcmp(op,'eval')

         val = 1;

         len = str2num(get(uih.h_length,'String'));
         if isempty(len)
            set(uih.h_length,'String',num2str(initvals(1)))
            val = 0;
         end

         ht = str2num(get(uih.h_height,'String'));
         if isempty(ht)
            set(uih.h_height,'String',num2str(initvals(2)))
            val = 0;
         end

         int = str2num(get(uih.h_interval,'String'));
         if isempty(int)
            set(uih.h_interval,'String',num2str(initvals(3)))
            val = 0;
         end

         font = str2num(get(uih.h_font,'String'));
         if isempty(font)
            set(uih.h_font,'String',num2str(initvals(4)))
            val = 0;
         end

         if val == 1

            clr = get(uih.h_clr,'ForegroundColor');

            if ~isempty(uih.h_mapscale)
               set(uih.h_mapscale,'UserData',[len int ht font])
            end

            close(h_dlg)
            figure(uih.h_fig)
            drawnow

            [lon,lat] = ginput(1);

            distbar([lon,lat],len,int,ht,font,'bold',clr);

            refresh(uih.h_fig)

         else

            drawnow
            messagebox('init','One or more invalid entries were reset to their defaults',[],'Error',[.9 .9 .9])

         end

      elseif strcmp(op,'cancel')

         close(h_dlg)
         figure(uih.h_fig)

      end

   end

end
