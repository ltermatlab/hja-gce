function [s,msg] = imp_usgs_stations(fn,pn,template,titlestr)
%Imports a USGS NWIS station description file generated by 'fetch_usgs_inventory'
%transformed using the XSL file 'parse_usgs_stations.xsl'
%
%syntax:  [s,msg] = imp_usgs_stations(fn,pn,template,title)
%
%inputs:
%  fn = file name to import (default = prompted)
%  pn = pathname for fn (default = pwd)
%  template = metadata template (default = 'USGS_Station_Descriptions')
%  title = data set title (default = 'USGS NWIS Station Report')
%
%outputs:
%  s = GCE Data Structure
%  msg = text of any error messages
%
%(c)2011-2012 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 06-Apr-2012

%initialize outputs:
s = [];
msg = '';

%define parameters
curpath = pwd;
format_string = '%s %s %s %s %d %f %f %s %f %f %s %d';
column_names = 'Program,Station,Description,SiteTypeCode,StateCode,Latitude,Longitude,Datum,Altitude,Drainage,HydrologicUnitCode,Realtime';
num_header_rows = 1;
missing_codes = '';
if exist('template','var') ~= 1
   template = 'USGS_Station_Descriptions';
end
if exist('titlestr','var') ~= 1
   titlestr = 'USGS NWIS Station Report';  %set default title unless provided as input
end

%validate path
if exist('pn','var') ~= 1
   pn = curpath;
elseif ~isdir(pn)
   pn = curpath;
elseif strcmp(pn(end),filesep)
   pn = pn(1:end-1);  %strip terminal file separator
end

%prompt for file if omitted or invalid
if exist('fn','var') ~= 1
   cd(pn)
   [fn,pn] = uigetfile('*.txt;*.asc;*.csv;*.dat;*.prn;*.ans','Select a text file to import');
   cd(curpath)
elseif exist([pn,filesep,fn],'file') ~= 2
   [fn,pn] = uigetfile(fn,'Locate the text file to import');
end
drawnow

%pass filename, pathname, and static parameters to custom ASCII import filter
if fn ~= 0

   %import the data file
   [s,msg] = imp_ascii(fn,pn,titlestr,template,format_string,column_names,num_header_rows,missing_codes);

   %update the title
   if ~isempty(s) && ~isempty(titlestr)
      s = newtitle(s,titlestr);
   end

   %decode site types, states based on code defs in metadata
   s = decodecols(s,{'SiteTypeCode','StateCode'},'',{'SiteType','State'});

   %sort data
   s = sortdata(s,{'State','SiteType','Description','Station'});

   %convert units to metric
   s = unit_convert(s,(1:length(s.name)),'metric');

else
   msg = 'import cancelled';
end
