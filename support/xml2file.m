function msg = xml2file(xml,root,indent,fn,pn,xsl_url,encoding)
%Writes an xml file to disk using an xml string generated by 'struct2xml'
%
%syntax: msg = xml2file(xml,root,indent,fn,pn,xsl_url,encoding)
%
%inputs:
%
%  xml = xml text from 'struct2xml' (character array; required)
%  root = name of the document root element (string; optional; default = '' for none)
%  indent = optional number of characters to indent xml within root element tags (integer; optional; default = 0)
%  fn = filename (string; optional; prompted if omitted)
%  pn = pathname (string; optional; current directory if omitted)
%  xsl_url = XSL URL to include in the XML preamble (string; optional; default = '' for none)
%  encoding = character encoding to declare (string; optional; default = 'ISO-8859-1')
%
%output:
%  msg = test message indicating success or failure
%
%
%(c)2002-2013 Wade M. Sheldon and the Georgia Coastal Ecosystems LTER Project
%
%This file is part of the GCE Data Toolbox for MATLAB(r) software library.
%
%The GCE Data Toolbox is free software: you can redistribute it and/or modify it under the terms
%of the GNU General Public License as published by the Free Software Foundation, either version 3
%of the License, or (at your option) any later version.
%
%The GCE Data Toolbox is distributed in the hope that it will be useful, but WITHOUT ANY
%WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
%PURPOSE. See the GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License along with The GCE Data Toolbox
%as 'license.txt'. If not, see <http://www.gnu.org/licenses/>.
%
%contact:
%  Wade Sheldon
%  GCE-LTER Project
%  Department of Marine Sciences
%  University of Georgia
%  Athens, GA 30602-3636
%  sheldon@uga.edu
%
%last modified: 16-Oct-2013

msg = '';

%check for required input
if nargin >= 1 && ischar(xml)

   %set default root if omitted
   if exist('root','var') ~= 1
      root = '';
   end
   
   %set default xsl if omitted
   if exist('xsl_url','var') ~= 1
      xsl_url = '';
   end
   
   %set default encoding if omitted
   if exist('encoding','var') ~= 1 || isempty(encoding)
      encoding = 'ISO-8859-1';
   end

   %validate indent
   if exist('indent','var') ~= 1 || ~isnumeric(indent) || isempty(indent)
      indent = 0;
   else
      indent = fix(indent);
   end
   
   %indent xml character array if specified
   if indent > 0
      xml = [repmat(' ',size(xml,1),indent),xml];
   end

   %validate path
   if exist('pn','var') ~= 1 || ~isdir(pn)
      pn = pwd;
   else
      pn = clean_path(pn);
   end

   %validate fn
   if exist('fn','var') ~= 1
      fn = '';
   end
   
   %prompt for file if not specified
   if isempty(fn)
      curpath = pwd;
      cd(pn)
      [fn,pn] = uiputfile('*.xml','Select a name and location for the XML file');
      cd(curpath)
      drawnow;
      if ~ischar(fn)
         fn = '';
      end
   end

   %check for valid file selection
   if ~isempty(fn)
      
      %get number of rows
      r = size(xml,1);
      
      try
   
         %open file
         fid = fopen([pn,filesep,fn],'w');
         
         %print xml header
         fprintf(fid,['<?xml version="1.0" encoding="',encoding,'"?>\r\n']);
         
         %add xsl url if defined
         if ~isempty(xsl_url)
            fprintf(fid,['<?xml-stylesheet type="text/xsl" href="',xsl_url,'"?>\r\n']);
         end
         
         %add root element if defined
         if ~isempty(root)
            fprintf(fid,'%s\r\n',['<',root,'>']);  %print opening root element
         end
         
         %loop through rows of the xml
         for n = 1:r
            str = deblank(xml(n,:));
            if ~isempty(str)
               fprintf(fid,'%s\r\n',str);
            end
         end
         
         %print closing root element
         if ~isempty(root)
            fprintf(fid,'%s\r',['</',root,'>']);
         end
         
         %close file
         fclose(fid);
         
         msg = 'file written successfully';
         
      catch e
         msg = ['errors occurred writing the file (',e.message,')'];
      end
      
   end

end
